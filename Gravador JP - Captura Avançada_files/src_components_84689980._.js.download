(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/src_components_84689980._.js", {

"[project]/src/components/ui/button.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
__turbopack_context__.s({
    "Button": (()=>Button),
    "buttonVariants": (()=>buttonVariants)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$slot$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@radix-ui/react-slot/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$class$2d$variance$2d$authority$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/class-variance-authority/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/lib/utils.ts [app-client] (ecmascript)");
;
;
;
;
;
const buttonVariants = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$class$2d$variance$2d$authority$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cva"])("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0", {
    variants: {
        variant: {
            default: "bg-primary text-primary-foreground hover:bg-primary/90",
            destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/90",
            outline: "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
            secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
            ghost: "hover:bg-accent hover:text-accent-foreground",
            link: "text-primary underline-offset-4 hover:underline"
        },
        size: {
            default: "h-10 px-4 py-2",
            sm: "h-9 rounded-md px-3",
            lg: "h-11 rounded-md px-8",
            icon: "h-10 w-10"
        }
    },
    defaultVariants: {
        variant: "default",
        size: "default"
    }
});
const Button = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c = ({ className, variant, size, asChild = false, ...props }, ref)=>{
    const Comp = asChild ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$slot$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Slot"] : "button";
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(Comp, {
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])(buttonVariants({
            variant,
            size,
            className
        })),
        ref: ref,
        ...props
    }, void 0, false, {
        fileName: "[project]/src/components/ui/button.tsx",
        lineNumber: 46,
        columnNumber: 7
    }, this);
});
_c1 = Button;
Button.displayName = "Button";
;
var _c, _c1;
__turbopack_context__.k.register(_c, "Button$React.forwardRef");
__turbopack_context__.k.register(_c1, "Button");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/components/ui/card.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
__turbopack_context__.s({
    "Card": (()=>Card),
    "CardContent": (()=>CardContent),
    "CardDescription": (()=>CardDescription),
    "CardFooter": (()=>CardFooter),
    "CardHeader": (()=>CardHeader),
    "CardTitle": (()=>CardTitle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/lib/utils.ts [app-client] (ecmascript)");
;
;
;
const Card = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c = ({ className, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("rounded-lg border bg-card text-card-foreground shadow-sm", className),
        ...props
    }, void 0, false, {
        fileName: "[project]/src/components/ui/card.tsx",
        lineNumber: 9,
        columnNumber: 3
    }, this));
_c1 = Card;
Card.displayName = "Card";
const CardHeader = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c2 = ({ className, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("flex flex-col space-y-1.5 p-6", className),
        ...props
    }, void 0, false, {
        fileName: "[project]/src/components/ui/card.tsx",
        lineNumber: 24,
        columnNumber: 3
    }, this));
_c3 = CardHeader;
CardHeader.displayName = "CardHeader";
const CardTitle = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c4 = ({ className, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("text-2xl font-semibold leading-none tracking-tight", className),
        ...props
    }, void 0, false, {
        fileName: "[project]/src/components/ui/card.tsx",
        lineNumber: 36,
        columnNumber: 3
    }, this));
_c5 = CardTitle;
CardTitle.displayName = "CardTitle";
const CardDescription = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c6 = ({ className, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("text-sm text-muted-foreground", className),
        ...props
    }, void 0, false, {
        fileName: "[project]/src/components/ui/card.tsx",
        lineNumber: 51,
        columnNumber: 3
    }, this));
_c7 = CardDescription;
CardDescription.displayName = "CardDescription";
const CardContent = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c8 = ({ className, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("p-6 pt-0", className),
        ...props
    }, void 0, false, {
        fileName: "[project]/src/components/ui/card.tsx",
        lineNumber: 63,
        columnNumber: 3
    }, this));
_c9 = CardContent;
CardContent.displayName = "CardContent";
const CardFooter = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c10 = ({ className, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("flex items-center p-6 pt-0", className),
        ...props
    }, void 0, false, {
        fileName: "[project]/src/components/ui/card.tsx",
        lineNumber: 71,
        columnNumber: 3
    }, this));
_c11 = CardFooter;
CardFooter.displayName = "CardFooter";
;
var _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;
__turbopack_context__.k.register(_c, "Card$React.forwardRef");
__turbopack_context__.k.register(_c1, "Card");
__turbopack_context__.k.register(_c2, "CardHeader$React.forwardRef");
__turbopack_context__.k.register(_c3, "CardHeader");
__turbopack_context__.k.register(_c4, "CardTitle$React.forwardRef");
__turbopack_context__.k.register(_c5, "CardTitle");
__turbopack_context__.k.register(_c6, "CardDescription$React.forwardRef");
__turbopack_context__.k.register(_c7, "CardDescription");
__turbopack_context__.k.register(_c8, "CardContent$React.forwardRef");
__turbopack_context__.k.register(_c9, "CardContent");
__turbopack_context__.k.register(_c10, "CardFooter$React.forwardRef");
__turbopack_context__.k.register(_c11, "CardFooter");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/components/ui/alert.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
__turbopack_context__.s({
    "Alert": (()=>Alert),
    "AlertDescription": (()=>AlertDescription),
    "AlertTitle": (()=>AlertTitle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$class$2d$variance$2d$authority$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/class-variance-authority/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/lib/utils.ts [app-client] (ecmascript)");
;
;
;
;
const alertVariants = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$class$2d$variance$2d$authority$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cva"])("relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground", {
    variants: {
        variant: {
            default: "bg-background text-foreground",
            destructive: "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive"
        }
    },
    defaultVariants: {
        variant: "default"
    }
});
const Alert = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c = ({ className, variant, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        ref: ref,
        role: "alert",
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])(alertVariants({
            variant
        }), className),
        ...props
    }, void 0, false, {
        fileName: "[project]/src/components/ui/alert.tsx",
        lineNumber: 26,
        columnNumber: 3
    }, this));
_c1 = Alert;
Alert.displayName = "Alert";
const AlertTitle = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c2 = ({ className, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("h5", {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("mb-1 font-medium leading-none tracking-tight", className),
        ...props
    }, void 0, false, {
        fileName: "[project]/src/components/ui/alert.tsx",
        lineNumber: 39,
        columnNumber: 3
    }, this));
_c3 = AlertTitle;
AlertTitle.displayName = "AlertTitle";
const AlertDescription = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c4 = ({ className, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("text-sm [&_p]:leading-relaxed", className),
        ...props
    }, void 0, false, {
        fileName: "[project]/src/components/ui/alert.tsx",
        lineNumber: 51,
        columnNumber: 3
    }, this));
_c5 = AlertDescription;
AlertDescription.displayName = "AlertDescription";
;
var _c, _c1, _c2, _c3, _c4, _c5;
__turbopack_context__.k.register(_c, "Alert$React.forwardRef");
__turbopack_context__.k.register(_c1, "Alert");
__turbopack_context__.k.register(_c2, "AlertTitle$React.forwardRef");
__turbopack_context__.k.register(_c3, "AlertTitle");
__turbopack_context__.k.register(_c4, "AlertDescription$React.forwardRef");
__turbopack_context__.k.register(_c5, "AlertDescription");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/components/ui/label.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
__turbopack_context__.s({
    "Label": (()=>Label)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$label$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@radix-ui/react-label/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$class$2d$variance$2d$authority$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/class-variance-authority/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/lib/utils.ts [app-client] (ecmascript)");
"use client";
;
;
;
;
;
const labelVariants = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$class$2d$variance$2d$authority$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cva"])("text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70");
const Label = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c = ({ className, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$label$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Root"], {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])(labelVariants(), className),
        ...props
    }, void 0, false, {
        fileName: "[project]/src/components/ui/label.tsx",
        lineNumber: 18,
        columnNumber: 3
    }, this));
_c1 = Label;
Label.displayName = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$label$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Root"].displayName;
;
var _c, _c1;
__turbopack_context__.k.register(_c, "Label$React.forwardRef");
__turbopack_context__.k.register(_c1, "Label");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/components/ui/select.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
__turbopack_context__.s({
    "Select": (()=>Select),
    "SelectContent": (()=>SelectContent),
    "SelectGroup": (()=>SelectGroup),
    "SelectItem": (()=>SelectItem),
    "SelectLabel": (()=>SelectLabel),
    "SelectScrollDownButton": (()=>SelectScrollDownButton),
    "SelectScrollUpButton": (()=>SelectScrollUpButton),
    "SelectSeparator": (()=>SelectSeparator),
    "SelectTrigger": (()=>SelectTrigger),
    "SelectValue": (()=>SelectValue)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@radix-ui/react-select/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$check$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Check$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/check.js [app-client] (ecmascript) <export default as Check>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$down$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronDown$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/chevron-down.js [app-client] (ecmascript) <export default as ChevronDown>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$up$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronUp$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/chevron-up.js [app-client] (ecmascript) <export default as ChevronUp>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/lib/utils.ts [app-client] (ecmascript)");
"use client";
;
;
;
;
;
const Select = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Root"];
const SelectGroup = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Group"];
const SelectValue = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Value"];
const SelectTrigger = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c = ({ className, children, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Trigger"], {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1", className),
        ...props,
        children: [
            children,
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Icon"], {
                asChild: true,
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$down$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronDown$3e$__["ChevronDown"], {
                    className: "h-4 w-4 opacity-50"
                }, void 0, false, {
                    fileName: "[project]/src/components/ui/select.tsx",
                    lineNumber: 29,
                    columnNumber: 7
                }, this)
            }, void 0, false, {
                fileName: "[project]/src/components/ui/select.tsx",
                lineNumber: 28,
                columnNumber: 5
            }, this)
        ]
    }, void 0, true, {
        fileName: "[project]/src/components/ui/select.tsx",
        lineNumber: 19,
        columnNumber: 3
    }, this));
_c1 = SelectTrigger;
SelectTrigger.displayName = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Trigger"].displayName;
const SelectScrollUpButton = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(({ className, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ScrollUpButton"], {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("flex cursor-default items-center justify-center py-1", className),
        ...props,
        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$up$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronUp$3e$__["ChevronUp"], {
            className: "h-4 w-4"
        }, void 0, false, {
            fileName: "[project]/src/components/ui/select.tsx",
            lineNumber: 47,
            columnNumber: 5
        }, this)
    }, void 0, false, {
        fileName: "[project]/src/components/ui/select.tsx",
        lineNumber: 39,
        columnNumber: 3
    }, this));
_c2 = SelectScrollUpButton;
SelectScrollUpButton.displayName = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ScrollUpButton"].displayName;
const SelectScrollDownButton = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(({ className, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ScrollDownButton"], {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("flex cursor-default items-center justify-center py-1", className),
        ...props,
        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$down$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronDown$3e$__["ChevronDown"], {
            className: "h-4 w-4"
        }, void 0, false, {
            fileName: "[project]/src/components/ui/select.tsx",
            lineNumber: 64,
            columnNumber: 5
        }, this)
    }, void 0, false, {
        fileName: "[project]/src/components/ui/select.tsx",
        lineNumber: 56,
        columnNumber: 3
    }, this));
_c3 = SelectScrollDownButton;
SelectScrollDownButton.displayName = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ScrollDownButton"].displayName;
const SelectContent = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c4 = ({ className, children, position = "popper", ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Portal"], {
        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Content"], {
            ref: ref,
            className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2", position === "popper" && "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1", className),
            position: position,
            ...props,
            children: [
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(SelectScrollUpButton, {}, void 0, false, {
                    fileName: "[project]/src/components/ui/select.tsx",
                    lineNumber: 86,
                    columnNumber: 7
                }, this),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Viewport"], {
                    className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("p-1", position === "popper" && "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"),
                    children: children
                }, void 0, false, {
                    fileName: "[project]/src/components/ui/select.tsx",
                    lineNumber: 87,
                    columnNumber: 7
                }, this),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(SelectScrollDownButton, {}, void 0, false, {
                    fileName: "[project]/src/components/ui/select.tsx",
                    lineNumber: 96,
                    columnNumber: 7
                }, this)
            ]
        }, void 0, true, {
            fileName: "[project]/src/components/ui/select.tsx",
            lineNumber: 75,
            columnNumber: 5
        }, this)
    }, void 0, false, {
        fileName: "[project]/src/components/ui/select.tsx",
        lineNumber: 74,
        columnNumber: 3
    }, this));
_c5 = SelectContent;
SelectContent.displayName = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Content"].displayName;
const SelectLabel = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c6 = ({ className, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("py-1.5 pl-8 pr-2 text-sm font-semibold", className),
        ...props
    }, void 0, false, {
        fileName: "[project]/src/components/ui/select.tsx",
        lineNumber: 106,
        columnNumber: 3
    }, this));
_c7 = SelectLabel;
SelectLabel.displayName = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"].displayName;
const SelectItem = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c8 = ({ className, children, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Item"], {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", className),
        ...props,
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center",
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ItemIndicator"], {
                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$check$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Check$3e$__["Check"], {
                        className: "h-4 w-4"
                    }, void 0, false, {
                        fileName: "[project]/src/components/ui/select.tsx",
                        lineNumber: 128,
                        columnNumber: 9
                    }, this)
                }, void 0, false, {
                    fileName: "[project]/src/components/ui/select.tsx",
                    lineNumber: 127,
                    columnNumber: 7
                }, this)
            }, void 0, false, {
                fileName: "[project]/src/components/ui/select.tsx",
                lineNumber: 126,
                columnNumber: 5
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ItemText"], {
                children: children
            }, void 0, false, {
                fileName: "[project]/src/components/ui/select.tsx",
                lineNumber: 132,
                columnNumber: 5
            }, this)
        ]
    }, void 0, true, {
        fileName: "[project]/src/components/ui/select.tsx",
        lineNumber: 118,
        columnNumber: 3
    }, this));
_c9 = SelectItem;
SelectItem.displayName = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Item"].displayName;
const SelectSeparator = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c10 = ({ className, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Separator"], {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("-mx-1 my-1 h-px bg-muted", className),
        ...props
    }, void 0, false, {
        fileName: "[project]/src/components/ui/select.tsx",
        lineNumber: 141,
        columnNumber: 3
    }, this));
_c11 = SelectSeparator;
SelectSeparator.displayName = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Separator"].displayName;
;
var _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;
__turbopack_context__.k.register(_c, "SelectTrigger$React.forwardRef");
__turbopack_context__.k.register(_c1, "SelectTrigger");
__turbopack_context__.k.register(_c2, "SelectScrollUpButton");
__turbopack_context__.k.register(_c3, "SelectScrollDownButton");
__turbopack_context__.k.register(_c4, "SelectContent$React.forwardRef");
__turbopack_context__.k.register(_c5, "SelectContent");
__turbopack_context__.k.register(_c6, "SelectLabel$React.forwardRef");
__turbopack_context__.k.register(_c7, "SelectLabel");
__turbopack_context__.k.register(_c8, "SelectItem$React.forwardRef");
__turbopack_context__.k.register(_c9, "SelectItem");
__turbopack_context__.k.register(_c10, "SelectSeparator$React.forwardRef");
__turbopack_context__.k.register(_c11, "SelectSeparator");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/components/ui/slider.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
__turbopack_context__.s({
    "Slider": (()=>Slider)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$slider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@radix-ui/react-slider/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/lib/utils.ts [app-client] (ecmascript)");
"use client";
;
;
;
;
const Slider = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c = ({ className, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$slider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Root"], {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("relative flex w-full touch-none select-none items-center", className),
        ...props,
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$slider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Track"], {
                className: "relative h-2 w-full grow overflow-hidden rounded-full bg-secondary",
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$slider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Range"], {
                    className: "absolute h-full bg-primary"
                }, void 0, false, {
                    fileName: "[project]/src/components/ui/slider.tsx",
                    lineNumber: 21,
                    columnNumber: 7
                }, this)
            }, void 0, false, {
                fileName: "[project]/src/components/ui/slider.tsx",
                lineNumber: 20,
                columnNumber: 5
            }, this),
            Array.isArray(props.value) ? props.value.map((_, i)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$slider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Thumb"], {
                    className: "block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50"
                }, i, false, {
                    fileName: "[project]/src/components/ui/slider.tsx",
                    lineNumber: 26,
                    columnNumber: 7
                }, this)) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$slider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Thumb"], {
                className: "block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50"
            }, void 0, false, {
                fileName: "[project]/src/components/ui/slider.tsx",
                lineNumber: 31,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "[project]/src/components/ui/slider.tsx",
        lineNumber: 12,
        columnNumber: 3
    }, this));
_c1 = Slider;
Slider.displayName = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$slider$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Root"].displayName;
;
var _c, _c1;
__turbopack_context__.k.register(_c, "Slider$React.forwardRef");
__turbopack_context__.k.register(_c1, "Slider");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/components/ui/switch.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
__turbopack_context__.s({
    "Switch": (()=>Switch)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$switch$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@radix-ui/react-switch/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/lib/utils.ts [app-client] (ecmascript)");
"use client";
;
;
;
;
const Switch = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c = ({ className, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$switch$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Root"], {
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input", className),
        ...props,
        ref: ref,
        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$switch$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Thumb"], {
            className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0")
        }, void 0, false, {
            fileName: "[project]/src/components/ui/switch.tsx",
            lineNumber: 20,
            columnNumber: 5
        }, this)
    }, void 0, false, {
        fileName: "[project]/src/components/ui/switch.tsx",
        lineNumber: 12,
        columnNumber: 3
    }, this));
_c1 = Switch;
Switch.displayName = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$switch$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Root"].displayName;
;
var _c, _c1;
__turbopack_context__.k.register(_c, "Switch$React.forwardRef");
__turbopack_context__.k.register(_c1, "Switch");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/components/ui/accordion.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
__turbopack_context__.s({
    "Accordion": (()=>Accordion),
    "AccordionContent": (()=>AccordionContent),
    "AccordionItem": (()=>AccordionItem),
    "AccordionTrigger": (()=>AccordionTrigger)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$accordion$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@radix-ui/react-accordion/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$down$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronDown$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/chevron-down.js [app-client] (ecmascript) <export default as ChevronDown>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/lib/utils.ts [app-client] (ecmascript)");
"use client";
;
;
;
;
;
const Accordion = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$accordion$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Root"];
const AccordionItem = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c = ({ className, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$accordion$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Item"], {
        ref: ref,
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("border-b border-border/50 last-of-type:border-b-0", className),
        ...props
    }, void 0, false, {
        fileName: "[project]/src/components/ui/accordion.tsx",
        lineNumber: 16,
        columnNumber: 3
    }, this));
_c1 = AccordionItem;
AccordionItem.displayName = "AccordionItem";
const AccordionTrigger = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c2 = ({ className, children, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$accordion$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Header"], {
        className: "flex",
        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$accordion$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Trigger"], {
            ref: ref,
            className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("flex flex-1 items-center justify-between py-3 px-2 font-medium transition-all hover:bg-accent/10 rounded-md data-[state=open]:bg-accent/5 data-[state=open]:text-primary [&[data-state=open]>svg]:rotate-180", className),
            ...props,
            children: [
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                    className: "flex items-center",
                    children: children
                }, void 0, false, {
                    fileName: "[project]/src/components/ui/accordion.tsx",
                    lineNumber: 37,
                    columnNumber: 7
                }, this),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$down$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronDown$3e$__["ChevronDown"], {
                    className: "h-5 w-5 shrink-0 transition-transform duration-300 text-muted-foreground group-data-[state=open]:text-primary"
                }, void 0, false, {
                    fileName: "[project]/src/components/ui/accordion.tsx",
                    lineNumber: 38,
                    columnNumber: 7
                }, this)
            ]
        }, void 0, true, {
            fileName: "[project]/src/components/ui/accordion.tsx",
            lineNumber: 29,
            columnNumber: 5
        }, this)
    }, void 0, false, {
        fileName: "[project]/src/components/ui/accordion.tsx",
        lineNumber: 28,
        columnNumber: 3
    }, this));
_c3 = AccordionTrigger;
AccordionTrigger.displayName = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$accordion$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Trigger"].displayName;
const AccordionContent = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(_c4 = ({ className, children, ...props }, ref)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$accordion$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Content"], {
        ref: ref,
        className: "overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down",
        ...props,
        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("pb-4 pt-0 px-2", className),
            children: children
        }, void 0, false, {
            fileName: "[project]/src/components/ui/accordion.tsx",
            lineNumber: 53,
            columnNumber: 5
        }, this)
    }, void 0, false, {
        fileName: "[project]/src/components/ui/accordion.tsx",
        lineNumber: 48,
        columnNumber: 3
    }, this));
_c5 = AccordionContent;
AccordionContent.displayName = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$radix$2d$ui$2f$react$2d$accordion$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Content"].displayName;
;
var _c, _c1, _c2, _c3, _c4, _c5;
__turbopack_context__.k.register(_c, "AccordionItem$React.forwardRef");
__turbopack_context__.k.register(_c1, "AccordionItem");
__turbopack_context__.k.register(_c2, "AccordionTrigger$React.forwardRef");
__turbopack_context__.k.register(_c3, "AccordionTrigger");
__turbopack_context__.k.register(_c4, "AccordionContent$React.forwardRef");
__turbopack_context__.k.register(_c5, "AccordionContent");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>ScreenRecorderControls)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/ui/button.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$card$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/ui/card.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$alert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/ui/alert.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/ui/label.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/ui/select.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$slider$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/ui/slider.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$switch$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/ui/switch.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$accordion$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/components/ui/accordion.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$monitor$2d$play$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__MonitorPlay$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/monitor-play.js [app-client] (ecmascript) <export default as MonitorPlay>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$circle$2d$stop$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__StopCircle$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/circle-stop.js [app-client] (ecmascript) <export default as StopCircle>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$download$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Download$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/download.js [app-client] (ecmascript) <export default as Download>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$circle$2d$alert$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__AlertCircle$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/circle-alert.js [app-client] (ecmascript) <export default as AlertCircle>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$mic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Mic$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/mic.js [app-client] (ecmascript) <export default as Mic>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$film$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Film$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/film.js [app-client] (ecmascript) <export default as Film>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$speaker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Speaker$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/speaker.js [app-client] (ecmascript) <export default as Speaker>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$volume$2d$2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Volume2$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/volume-2.js [app-client] (ecmascript) <export default as Volume2>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$volume$2d$1$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Volume1$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/volume-1.js [app-client] (ecmascript) <export default as Volume1>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$settings$2d$2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Settings2$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/settings-2.js [app-client] (ecmascript) <export default as Settings2>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$maximize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Maximize$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/maximize.js [app-client] (ecmascript) <export default as Maximize>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$scissors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Scissors$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/scissors.js [app-client] (ecmascript) <export default as Scissors>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$disc$2d$3$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Disc3$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/disc-3.js [app-client] (ecmascript) <export default as Disc3>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$camera$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Camera$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/camera.js [app-client] (ecmascript) <export default as Camera>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$settings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Settings$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/settings.js [app-client] (ecmascript) <export default as Settings>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ImageIcon$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/image.js [app-client] (ecmascript) <export default as ImageIcon>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$audio$2d$lines$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__AudioLines$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/audio-lines.js [app-client] (ecmascript) <export default as AudioLines>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$video$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__VideoIcon$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/video.js [app-client] (ecmascript) <export default as VideoIcon>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$webcam$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__WebcamIcon$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/webcam.js [app-client] (ecmascript) <export default as WebcamIcon>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$star$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Star$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/star.js [app-client] (ecmascript) <export default as Star>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$monitor$2d$smartphone$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__MonitorSmartphone$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/monitor-smartphone.js [app-client] (ecmascript) <export default as MonitorSmartphone>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$mouse$2d$off$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__MouseOff$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/mouse-off.js [app-client] (ecmascript) <export default as MouseOff>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$circle$2d$check$2d$big$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__CheckCircle$3e$__ = __turbopack_context__.i("[project]/node_modules/lucide-react/dist/esm/icons/circle-check-big.js [app-client] (ecmascript) <export default as CheckCircle>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$hooks$2f$use$2d$toast$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/src/hooks/use-toast.ts [app-client] (ecmascript)");
;
var _s = __turbopack_context__.k.signature();
"use client";
;
;
;
;
;
;
;
;
;
;
;
const NO_MICROPHONE_SELECTED_VALUE = "__NO_MICROPHONE_SELECTED__";
const NO_WEBCAM_SELECTED_VALUE = "__NO_WEBCAM_SELECTED__";
const DEFAULT_AUDIO_OUTPUT_DEVICE_ID = "default";
const FRAME_RATES = [
    {
        value: "30",
        label: "30 FPS"
    },
    {
        value: "60",
        label: "60 FPS (Padrão)"
    },
    {
        value: "120",
        label: "120 FPS (Fluido)"
    }
];
const RESOLUTIONS = [
    {
        value: "native",
        label: "Resolução Nativa (Padrão)",
        width: undefined,
        height: undefined,
        bitrate: 8 * 1024 * 1024
    },
    {
        value: "4k",
        label: "4K (Ultra HD)",
        width: 3840,
        height: 2160,
        bitrate: 25 * 1024 * 1024
    },
    {
        value: "2k",
        label: "2K (QHD)",
        width: 2560,
        height: 1440,
        bitrate: 15 * 1024 * 1024
    },
    {
        value: "1080p",
        label: "1080p (Full HD)",
        width: 1920,
        height: 1080,
        bitrate: 8 * 1024 * 1024
    },
    {
        value: "720p",
        label: "720p (HD)",
        width: 1280,
        height: 720,
        bitrate: 4 * 1024 * 1024
    },
    {
        value: "480p",
        label: "480p (SD)",
        width: 854,
        height: 480,
        bitrate: 2 * 1024 * 1024
    }
];
const MAX_QUALITY_BITRATE = 30 * 1024 * 1024; // 30 Mbps for max quality override
const MAX_QUALITY_FPS = 120;
const DEFAULT_AUDIO_BITRATE = 128000; // 128 Kbps for audio
const CLIP_DURATION_MS = 30 * 1000;
const MEDIA_RECORDER_TIMESLICE_MS_FOR_CLIPS = 1000;
function ScreenRecorderControls() {
    _s();
    const [isRecording, setIsRecording] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [videoURL, setVideoURL] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null);
    const [error, setError] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null);
    const mediaRecorderRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const streamRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const displayStreamRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const micStreamRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const recordedChunksRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])([]);
    const videoRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const { toast } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$hooks$2f$use$2d$toast$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useToast"])();
    const [microphones, setMicrophones] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const [selectedMicrophoneId, setSelectedMicrophoneId] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(NO_MICROPHONE_SELECTED_VALUE);
    const [audioOutputDevices, setAudioOutputDevices] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const [selectedAudioOutputDeviceId, setSelectedAudioOutputDeviceId] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(DEFAULT_AUDIO_OUTPUT_DEVICE_ID);
    const [selectedFrameRate, setSelectedFrameRate] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])("60");
    const [selectedResolution, setSelectedResolution] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])("native");
    const [targetFileExtension, setTargetFileExtension] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])('webm');
    const [targetWebcamFileExtension, setTargetWebcamFileExtension] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])('webm');
    const [micVolume, setMicVolume] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(100);
    const [systemVolume, setSystemVolume] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(100);
    const [noiseSuppressionEnabled, setNoiseSuppressionEnabled] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(true);
    const [isMaxQualityEnabled, setIsMaxQualityEnabled] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [hideMouseCursor, setHideMouseCursor] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const audioContextRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const micAudioSourceRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const micGainNodeRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const systemAudioSourceRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const systemGainNodeRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const mediaStreamDestinationRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const [isClipBufferingActive, setIsClipBufferingActive] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const clipChunksRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])([]);
    const [lastClipUrl, setLastClipUrl] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null);
    const [webcamDevices, setWebcamDevices] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const [selectedWebcamId, setSelectedWebcamId] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(NO_WEBCAM_SELECTED_VALUE);
    const separateWebcamStreamRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const [hasCameraPermission, setHasCameraPermission] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(true);
    const webcamMediaRecorderRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const webcamRecordedChunksRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])([]);
    const [webcamVideoURL, setWebcamVideoURL] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null);
    const [isWebcamEnabled, setIsWebcamEnabled] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(true); // Default to true for separate recording
    const canvasRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const canvasStreamRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const animationFrameIdRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const activeTab = 'gravar';
    const cleanupAudioNodes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "ScreenRecorderControls.useCallback[cleanupAudioNodes]": ()=>{
            micAudioSourceRef.current?.disconnect();
            micGainNodeRef.current?.disconnect();
            systemAudioSourceRef.current?.disconnect();
            systemGainNodeRef.current?.disconnect();
            micAudioSourceRef.current = null;
            micGainNodeRef.current = null;
            systemAudioSourceRef.current = null;
            systemGainNodeRef.current = null;
            if (mediaStreamDestinationRef.current) {
                mediaStreamDestinationRef.current.disconnect();
                mediaStreamDestinationRef.current = null;
            }
            if (audioContextRef.current && audioContextRef.current.state !== 'closed') {
                audioContextRef.current.close().catch({
                    "ScreenRecorderControls.useCallback[cleanupAudioNodes]": (e)=>console.error("Error closing AudioContext:", e)
                }["ScreenRecorderControls.useCallback[cleanupAudioNodes]"]).finally({
                    "ScreenRecorderControls.useCallback[cleanupAudioNodes]": ()=>{
                        audioContextRef.current = null;
                    }
                }["ScreenRecorderControls.useCallback[cleanupAudioNodes]"]);
            } else {
                audioContextRef.current = null;
            }
        }
    }["ScreenRecorderControls.useCallback[cleanupAudioNodes]"], []);
    const cleanupSeparateWebcamStream = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "ScreenRecorderControls.useCallback[cleanupSeparateWebcamStream]": (forceStop = false)=>{
            if (webcamMediaRecorderRef.current && webcamMediaRecorderRef.current.state === 'recording' && !forceStop) {
                return;
            }
            if (separateWebcamStreamRef.current) {
                separateWebcamStreamRef.current.getTracks().forEach({
                    "ScreenRecorderControls.useCallback[cleanupSeparateWebcamStream]": (track)=>track.stop()
                }["ScreenRecorderControls.useCallback[cleanupSeparateWebcamStream]"]);
                separateWebcamStreamRef.current = null;
                console.log("Cleaned up separate webcam hardware stream");
            }
        }
    }["ScreenRecorderControls.useCallback[cleanupSeparateWebcamStream]"], []);
    const stopCanvasDrawing = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "ScreenRecorderControls.useCallback[stopCanvasDrawing]": ()=>{
            if (animationFrameIdRef.current !== null) {
                cancelAnimationFrame(animationFrameIdRef.current);
                animationFrameIdRef.current = null;
            }
            if (canvasStreamRef.current) {
                canvasStreamRef.current.getTracks().forEach({
                    "ScreenRecorderControls.useCallback[stopCanvasDrawing]": (track)=>track.stop()
                }["ScreenRecorderControls.useCallback[stopCanvasDrawing]"]);
                canvasStreamRef.current = null;
                console.log("Stopped canvas stream.");
            }
            if (canvasRef.current) {
                const ctx = canvasRef.current.getContext('2d');
                ctx?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);
                if (ctx) ctx.filter = 'none';
                console.log("Cleared canvas and reset its context filter.");
            }
        }
    }["ScreenRecorderControls.useCallback[stopCanvasDrawing]"], []);
    const cleanupStreamRefs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "ScreenRecorderControls.useCallback[cleanupStreamRefs]": ()=>{
            console.log("Cleaning up stream refs...");
            if (streamRef.current) {
                streamRef.current.getTracks().forEach({
                    "ScreenRecorderControls.useCallback[cleanupStreamRefs]": (track)=>track.stop()
                }["ScreenRecorderControls.useCallback[cleanupStreamRefs]"]);
                streamRef.current = null;
                console.log("Cleaned up main combined stream (streamRef).");
            }
            if (displayStreamRef.current) {
                displayStreamRef.current.getVideoTracks().forEach({
                    "ScreenRecorderControls.useCallback[cleanupStreamRefs]": (track)=>{
                        track.onended = null;
                        track.stop();
                    }
                }["ScreenRecorderControls.useCallback[cleanupStreamRefs]"]);
                displayStreamRef.current.getAudioTracks().forEach({
                    "ScreenRecorderControls.useCallback[cleanupStreamRefs]": (track)=>track.stop()
                }["ScreenRecorderControls.useCallback[cleanupStreamRefs]"]);
                displayStreamRef.current = null;
                console.log("Cleaned up display stream (displayStreamRef).");
            }
            if (micStreamRef.current) {
                micStreamRef.current.getTracks().forEach({
                    "ScreenRecorderControls.useCallback[cleanupStreamRefs]": (track)=>track.stop()
                }["ScreenRecorderControls.useCallback[cleanupStreamRefs]"]);
                micStreamRef.current = null;
                console.log("Cleaned up microphone stream (micStreamRef).");
            }
            stopCanvasDrawing();
        }
    }["ScreenRecorderControls.useCallback[cleanupStreamRefs]"], [
        stopCanvasDrawing
    ]);
    const cleanupMediaRecorders = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "ScreenRecorderControls.useCallback[cleanupMediaRecorders]": ()=>{
            console.log("Cleaning up media recorders...");
            if (mediaRecorderRef.current && mediaRecorderRef.current.state !== "inactive") {
                mediaRecorderRef.current.stop();
                console.log("Stopped main media recorder.");
            }
            mediaRecorderRef.current = null;
            recordedChunksRef.current = [];
            if (webcamMediaRecorderRef.current && webcamMediaRecorderRef.current.state !== "inactive") {
                webcamMediaRecorderRef.current.stop();
                console.log("Stopped separate webcam media recorder.");
            }
            webcamMediaRecorderRef.current = null;
            webcamRecordedChunksRef.current = [];
            clipChunksRef.current = [];
        }
    }["ScreenRecorderControls.useCallback[cleanupMediaRecorders]"], []);
    const fullStreamAndRecorderCleanup = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "ScreenRecorderControls.useCallback[fullStreamAndRecorderCleanup]": ()=>{
            console.log("Performing full stream and recorder cleanup.");
            cleanupMediaRecorders();
            cleanupStreamRefs();
            cleanupAudioNodes();
            cleanupSeparateWebcamStream(true);
        }
    }["ScreenRecorderControls.useCallback[fullStreamAndRecorderCleanup]"], [
        cleanupMediaRecorders,
        cleanupStreamRefs,
        cleanupAudioNodes,
        cleanupSeparateWebcamStream
    ]);
    const loadAudioDevices = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "ScreenRecorderControls.useCallback[loadAudioDevices]": async ()=>{
            try {
                if (navigator.mediaDevices && typeof navigator.mediaDevices.getUserMedia === 'function' && typeof navigator.mediaDevices.enumerateDevices === 'function') {
                    let audioPermissionGranted = false;
                    try {
                        const tempStream = await navigator.mediaDevices.getUserMedia({
                            audio: true,
                            video: false
                        });
                        tempStream.getTracks().forEach({
                            "ScreenRecorderControls.useCallback[loadAudioDevices]": (track)=>track.stop()
                        }["ScreenRecorderControls.useCallback[loadAudioDevices]"]);
                        audioPermissionGranted = true;
                    } catch (permError) {
                        console.warn("Initial audio access for device listing failed or was denied:", permError);
                    }
                    const devices = await navigator.mediaDevices.enumerateDevices();
                    const audioInputs = devices.filter({
                        "ScreenRecorderControls.useCallback[loadAudioDevices].audioInputs": (device)=>device.kind === 'audioinput'
                    }["ScreenRecorderControls.useCallback[loadAudioDevices].audioInputs"]);
                    const audioOutputs = devices.filter({
                        "ScreenRecorderControls.useCallback[loadAudioDevices].audioOutputs": (device)=>device.kind === 'audiooutput'
                    }["ScreenRecorderControls.useCallback[loadAudioDevices].audioOutputs"]);
                    if (!audioPermissionGranted && (audioInputs.every({
                        "ScreenRecorderControls.useCallback[loadAudioDevices]": (d)=>!d.label
                    }["ScreenRecorderControls.useCallback[loadAudioDevices]"]) || audioOutputs.every({
                        "ScreenRecorderControls.useCallback[loadAudioDevices]": (d)=>!d.label
                    }["ScreenRecorderControls.useCallback[loadAudioDevices]"]))) {
                        setMicrophones(audioInputs.map({
                            "ScreenRecorderControls.useCallback[loadAudioDevices]": (device, index)=>({
                                    ...device,
                                    label: device.label || `Microfone ${index + 1}`
                                })
                        }["ScreenRecorderControls.useCallback[loadAudioDevices]"]));
                        setAudioOutputDevices(audioOutputs.map({
                            "ScreenRecorderControls.useCallback[loadAudioDevices]": (device, index)=>({
                                    ...device,
                                    label: device.label || `Alto-falante ${index + 1}`
                                })
                        }["ScreenRecorderControls.useCallback[loadAudioDevices]"]));
                    } else {
                        setMicrophones(audioInputs);
                        setAudioOutputDevices(audioOutputs);
                    }
                    if (audioInputs.length > 0 && selectedMicrophoneId === NO_MICROPHONE_SELECTED_VALUE) {
                        setSelectedMicrophoneId(audioInputs[0].deviceId); // Auto-select first mic
                    }
                } else {
                    console.warn("getUserMedia or enumerateDevices is not supported for audio.");
                    toast({
                        title: "Funcionalidade de Áudio Limitada",
                        description: "Seu navegador não suporta listagem de dispositivos de áudio."
                    });
                }
            } catch (err) {
                console.error("Error enumerating audio devices:", err);
                toast({
                    title: "Erro ao Listar Dispositivos de Áudio",
                    variant: "destructive"
                });
            }
        }
    }["ScreenRecorderControls.useCallback[loadAudioDevices]"], [
        toast,
        selectedMicrophoneId
    ]);
    const loadWebcams = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "ScreenRecorderControls.useCallback[loadWebcams]": async ()=>{
            try {
                if (navigator.mediaDevices && typeof navigator.mediaDevices.enumerateDevices === 'function') {
                    let permissionGranted = false;
                    try {
                        const tempStream = await navigator.mediaDevices.getUserMedia({
                            video: true
                        });
                        tempStream.getTracks().forEach({
                            "ScreenRecorderControls.useCallback[loadWebcams]": (track)=>track.stop()
                        }["ScreenRecorderControls.useCallback[loadWebcams]"]);
                        permissionGranted = true;
                        setHasCameraPermission(true);
                    } catch (permError) {
                        console.warn("Initial camera access for device listing failed or was denied:", permError);
                        setHasCameraPermission(false);
                    }
                    const devices = await navigator.mediaDevices.enumerateDevices();
                    const videoInputs = devices.filter({
                        "ScreenRecorderControls.useCallback[loadWebcams].videoInputs": (device)=>device.kind === 'videoinput'
                    }["ScreenRecorderControls.useCallback[loadWebcams].videoInputs"]);
                    if (!permissionGranted && videoInputs.length > 0 && videoInputs.every({
                        "ScreenRecorderControls.useCallback[loadWebcams]": (d)=>!d.label
                    }["ScreenRecorderControls.useCallback[loadWebcams]"])) {
                        setWebcamDevices(videoInputs.map({
                            "ScreenRecorderControls.useCallback[loadWebcams]": (device, index)=>({
                                    ...device,
                                    label: `Webcam ${index + 1}`
                                })
                        }["ScreenRecorderControls.useCallback[loadWebcams]"]));
                    } else if (videoInputs.length > 0) {
                        setWebcamDevices(videoInputs);
                    } else {
                        setWebcamDevices([]);
                        setSelectedWebcamId(NO_WEBCAM_SELECTED_VALUE);
                        setIsWebcamEnabled(false);
                    }
                    if (videoInputs.length > 0 && selectedWebcamId === NO_WEBCAM_SELECTED_VALUE) {
                        setSelectedWebcamId(videoInputs[0].deviceId); // Auto-select first webcam
                        if (!isWebcamEnabled && videoInputs.length > 0) setIsWebcamEnabled(true); // Enable if not already
                    } else if (videoInputs.length === 0) {
                        setIsWebcamEnabled(false); // Ensure webcam is disabled if no devices found
                    }
                }
            } catch (err) {
                console.error("Error enumerating webcam devices:", err);
                toast({
                    title: "Erro ao Listar Webcams",
                    description: "Não foi possível carregar a lista de webcams.",
                    variant: "destructive"
                });
            }
        }
    }["ScreenRecorderControls.useCallback[loadWebcams]"], [
        toast,
        selectedWebcamId,
        isWebcamEnabled
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "ScreenRecorderControls.useEffect": ()=>{
            const initializeAllDevices = {
                "ScreenRecorderControls.useEffect.initializeAllDevices": async ()=>{
                    try {
                        await loadAudioDevices();
                        await loadWebcams();
                    // Default state of isWebcamEnabled is true, it will be auto-selected if devices exist
                    } catch (error) {
                        console.error("Critical error during device initialization sequence:", error);
                        toast({
                            title: "Falha na Inicialização",
                            description: "Não foi possível carregar todos os dispositivos necessários.",
                            variant: "destructive"
                        });
                    }
                }
            }["ScreenRecorderControls.useEffect.initializeAllDevices"];
            initializeAllDevices();
            if (typeof document !== 'undefined' && !canvasRef.current) {
                const cvs = document.createElement('canvas');
                canvasRef.current = cvs;
                console.log("Created main canvas element for screen + (potential) webcam overlay.");
            }
            return ({
                "ScreenRecorderControls.useEffect": ()=>{
                    console.log("ScreenRecorderControls unmounting. Performing full cleanup.");
                    fullStreamAndRecorderCleanup();
                    if (videoURL) URL.revokeObjectURL(videoURL);
                    if (webcamVideoURL) URL.revokeObjectURL(webcamVideoURL);
                    if (lastClipUrl) URL.revokeObjectURL(lastClipUrl);
                }
            })["ScreenRecorderControls.useEffect"];
        }
    }["ScreenRecorderControls.useEffect"], [
        loadAudioDevices,
        loadWebcams,
        fullStreamAndRecorderCleanup,
        toast,
        videoURL,
        webcamVideoURL,
        lastClipUrl
    ]);
    const manageSeparateWebcamStream = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "ScreenRecorderControls.useCallback[manageSeparateWebcamStream]": async (shouldBeActive)=>{
            const isWebcamSelectedForSeparateRecording = isWebcamEnabled && selectedWebcamId && selectedWebcamId !== NO_WEBCAM_SELECTED_VALUE;
            let fpsForWebcam = parseInt(selectedFrameRate, 10) || 30;
            let webcamWidth = 1920;
            let webcamHeight = 1080;
            if (isMaxQualityEnabled) {
                fpsForWebcam = MAX_QUALITY_FPS;
                // For webcam, max quality might mean different resolution, e.g. its native max or a standard like 1080p/4K
                // Let's aim for 4K if possible, but webcam capabilities vary.
                // We can use ideal constraints and let the browser decide the best it can do.
                webcamWidth = 3840;
                webcamHeight = 2160;
                console.log(`Max Quality ON: Setting target FPS for separate webcam to ${fpsForWebcam}, ideal res ${webcamWidth}x${webcamHeight}`);
            } else {
                // If not max quality, use a sensible default like 1080p for webcam, or respect a specific webcam setting if added later
                const webcamResolution = RESOLUTIONS.find({
                    "ScreenRecorderControls.useCallback[manageSeparateWebcamStream].webcamResolution": (r)=>r.value === "1080p"
                }["ScreenRecorderControls.useCallback[manageSeparateWebcamStream].webcamResolution"]); // Default to 1080p for webcam
                webcamWidth = webcamResolution?.width || 1920;
                webcamHeight = webcamResolution?.height || 1080;
                console.log(`Standard Quality: Setting target FPS for separate webcam to ${fpsForWebcam}, ideal res ${webcamWidth}x${webcamHeight}`);
            }
            if (isWebcamSelectedForSeparateRecording && shouldBeActive && !separateWebcamStreamRef.current) {
                try {
                    console.log(`Attempting to get separate webcam stream for device: ${selectedWebcamId} at ${fpsForWebcam} FPS, ${webcamWidth}x${webcamHeight}`);
                    const videoConstraints = {
                        deviceId: {
                            exact: selectedWebcamId
                        },
                        width: {
                            ideal: webcamWidth
                        },
                        height: {
                            ideal: webcamHeight
                        },
                        frameRate: {
                            ideal: fpsForWebcam,
                            max: fpsForWebcam
                        }
                    };
                    const stream = await navigator.mediaDevices.getUserMedia({
                        video: videoConstraints
                    });
                    separateWebcamStreamRef.current = stream;
                    setHasCameraPermission(true);
                    console.log("Successfully acquired separate webcam stream:", stream.getVideoTracks()[0]?.getSettings());
                } catch (err) {
                    console.error('Error accessing selected webcam for separate recording:', err);
                    const domError = err;
                    setHasCameraPermission(false);
                    toast({
                        variant: 'destructive',
                        title: 'Acesso à Webcam Negado',
                        description: `Não foi possível acessar a webcam: ${domError.message} (${domError.name}). Verifique as permissões.`
                    });
                    if (domError.name === 'NotAllowedError' || domError.name === 'NotFoundError' || domError.name === 'OverconstrainedError') {
                        setSelectedWebcamId(NO_WEBCAM_SELECTED_VALUE);
                        setIsWebcamEnabled(false);
                    }
                }
            } else if ((!isWebcamSelectedForSeparateRecording || !shouldBeActive) && separateWebcamStreamRef.current) {
                console.log("Cleaning up separate webcam stream because it's no longer needed or selected.");
                cleanupSeparateWebcamStream();
            }
        }
    }["ScreenRecorderControls.useCallback[manageSeparateWebcamStream]"], [
        selectedWebcamId,
        selectedFrameRate,
        toast,
        cleanupSeparateWebcamStream,
        isMaxQualityEnabled,
        isWebcamEnabled
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "ScreenRecorderControls.useEffect": ()=>{
            const shouldWebcamHardwareBeActiveForSeparateRecording = isWebcamEnabled && selectedWebcamId !== NO_WEBCAM_SELECTED_VALUE && (isRecording || isClipBufferingActive);
            manageSeparateWebcamStream(shouldWebcamHardwareBeActiveForSeparateRecording);
        }
    }["ScreenRecorderControls.useEffect"], [
        selectedWebcamId,
        isRecording,
        isClipBufferingActive,
        manageSeparateWebcamStream,
        isWebcamEnabled
    ]);
    const startDrawingOnCanvas = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "ScreenRecorderControls.useCallback[startDrawingOnCanvas]": (screenStream)=>{
            console.log("Starting drawing on canvas for screen content...");
            if (!canvasRef.current || !videoRef.current) {
                console.error("Canvas or main videoRef not available for drawing.");
                return;
            }
            const screenVideoTrack = screenStream.getVideoTracks()[0];
            if (!screenVideoTrack) {
                console.error("Screen video track not found for canvas drawing.");
                return;
            }
            const screenVideoSettings = screenVideoTrack.getSettings();
            console.log("Screen video track settings for canvas base:", screenVideoSettings);
            const canvas = canvasRef.current;
            canvas.width = screenVideoSettings.width || 1920;
            canvas.height = screenVideoSettings.height || 1080;
            console.log(`Canvas dimensions set to: ${canvas.width}x${canvas.height}`);
            const ctx = canvas.getContext('2d');
            if (!ctx) {
                console.error("Failed to get 2D context from canvas.");
                return;
            }
            ctx.filter = 'none';
            const tempScreenVideo = document.createElement('video');
            tempScreenVideo.srcObject = screenStream;
            tempScreenVideo.muted = true;
            tempScreenVideo.play().catch({
                "ScreenRecorderControls.useCallback[startDrawingOnCanvas]": (e)=>console.error("Screen temp video play error for canvas drawing", e)
            }["ScreenRecorderControls.useCallback[startDrawingOnCanvas]"]);
            const draw = {
                "ScreenRecorderControls.useCallback[startDrawingOnCanvas].draw": ()=>{
                    if (!canvasRef.current || !ctx || !tempScreenVideo || tempScreenVideo.videoWidth === 0 || tempScreenVideo.videoHeight === 0) {
                        if (animationFrameIdRef.current !== null) cancelAnimationFrame(animationFrameIdRef.current);
                        animationFrameIdRef.current = requestAnimationFrame(draw);
                        return;
                    }
                    if (tempScreenVideo.readyState >= HTMLMediaElement.HAVE_CURRENT_DATA) {
                        ctx.clearRect(0, 0, canvas.width, canvas.height);
                        ctx.drawImage(tempScreenVideo, 0, 0, canvas.width, canvas.height);
                    }
                    animationFrameIdRef.current = requestAnimationFrame(draw);
                }
            }["ScreenRecorderControls.useCallback[startDrawingOnCanvas].draw"];
            draw();
            if (canvasStreamRef.current) {
                canvasStreamRef.current.getTracks().forEach({
                    "ScreenRecorderControls.useCallback[startDrawingOnCanvas]": (track)=>track.stop()
                }["ScreenRecorderControls.useCallback[startDrawingOnCanvas]"]);
                console.log("Stopped previous canvas stream before creating new one.");
            }
            let targetFpsForCanvasStream = parseInt(selectedFrameRate, 10);
            if (isMaxQualityEnabled) {
                targetFpsForCanvasStream = MAX_QUALITY_FPS;
                console.log(`Max Quality ON: Setting target FPS for canvas.captureStream to ${targetFpsForCanvasStream}`);
            }
            // @ts-ignore - captureStream can accept fps argument in some browsers
            canvasStreamRef.current = canvas.captureStream(targetFpsForCanvasStream);
            console.log(`Attempted to capture canvas stream at ${targetFpsForCanvasStream} FPS.`);
            if (canvasStreamRef.current && canvasStreamRef.current.getVideoTracks().length > 0) {
                const canvasTrackSettings = canvasStreamRef.current.getVideoTracks()[0].getSettings();
                console.log("Actual canvas stream video track settings:", canvasTrackSettings);
                if (typeof canvasTrackSettings.frameRate === 'number') {
                    console.log("  Actual canvas stream FPS:", canvasTrackSettings.frameRate.toFixed(2));
                }
            } else {
                console.warn("Canvas stream created but has no video tracks or is null.");
                toast({
                    title: "Aviso: Processamento Visual",
                    description: "Pode haver um problema ao iniciar o processamento da tela. A gravação pode falhar.",
                    variant: "default",
                    duration: 8000
                });
            }
        }
    }["ScreenRecorderControls.useCallback[startDrawingOnCanvas]"], [
        selectedFrameRate,
        isMaxQualityEnabled,
        toast
    ]);
    const setupStreamsAndAudioContext = async (videoConstraintsConfig)=>{
        console.log("Setting up streams and audio context. Requested video constraints:", videoConstraintsConfig);
        if (displayStreamRef.current) {
            displayStreamRef.current.getTracks().forEach((track)=>track.stop());
            displayStreamRef.current = null;
        }
        if (micStreamRef.current) {
            micStreamRef.current.getTracks().forEach((track)=>track.stop());
            micStreamRef.current = null;
        }
        cleanupAudioNodes();
        try {
            displayStreamRef.current = await navigator.mediaDevices.getDisplayMedia({
                video: videoConstraintsConfig,
                audio: true
            });
        } catch (err) {
            console.error("Error getting display media:", err);
            const domError = err;
            setError(`Falha ao capturar tela: ${domError.message} (${domError.name})`);
            toast({
                title: "Erro na Captura de Tela",
                description: `Não foi possível iniciar a captura: ${domError.message}`,
                variant: "destructive"
            });
            fullStreamAndRecorderCleanup();
            return null;
        }
        console.log("Acquired display media.");
        if (displayStreamRef.current.getVideoTracks().length > 0) {
            const displayTrackSettings = displayStreamRef.current.getVideoTracks()[0].getSettings();
            console.log("  Actual display stream video track settings from getDisplayMedia:", displayTrackSettings);
            if (typeof displayTrackSettings.frameRate === 'number') {
                console.log("    Acquired display FPS:", displayTrackSettings.frameRate.toFixed(2));
            }
            if (displayTrackSettings.width && displayTrackSettings.height) {
                console.log("    Acquired display Resolution:", displayTrackSettings.width + "x" + displayTrackSettings.height);
            }
        } else {
            console.warn("  Display stream has no video tracks.");
        }
        if (!audioContextRef.current || audioContextRef.current.state === 'closed') {
            audioContextRef.current = new AudioContext();
        }
        const audioCtx = audioContextRef.current;
        if (!mediaStreamDestinationRef.current || mediaStreamDestinationRef.current.context.state === 'closed') {
            mediaStreamDestinationRef.current = audioCtx.createMediaStreamDestination();
        }
        let hasSystemAudio = false;
        if (displayStreamRef.current.getAudioTracks().length > 0) {
            hasSystemAudio = true;
            systemAudioSourceRef.current = audioCtx.createMediaStreamSource(new MediaStream([
                displayStreamRef.current.getAudioTracks()[0].clone()
            ]));
            if (!systemGainNodeRef.current || systemGainNodeRef.current.context.state === 'closed') {
                systemGainNodeRef.current = audioCtx.createGain();
            }
            systemGainNodeRef.current.gain.value = systemVolume / 100;
            systemAudioSourceRef.current.connect(systemGainNodeRef.current);
            systemGainNodeRef.current.connect(mediaStreamDestinationRef.current);
            console.log("System audio track connected to destination.");
        } else {
            console.warn("No system audio track found in display stream.");
            toast({
                title: "Áudio do Sistema Não Capturado",
                description: "Certifique-se de que a opção 'Partilhar áudio do sistema' (ou similar) está MARCADA na janela de permissão do navegador.",
                variant: "default",
                duration: 10000
            });
        }
        let hasMicAudio = false;
        if (selectedMicrophoneId !== NO_MICROPHONE_SELECTED_VALUE) {
            try {
                micStreamRef.current = await navigator.mediaDevices.getUserMedia({
                    audio: {
                        deviceId: {
                            exact: selectedMicrophoneId
                        },
                        noiseSuppression: noiseSuppressionEnabled,
                        echoCancellation: true
                    }
                });
                if (micStreamRef.current.getAudioTracks().length > 0) {
                    hasMicAudio = true;
                    micAudioSourceRef.current = audioCtx.createMediaStreamSource(micStreamRef.current);
                    if (!micGainNodeRef.current || micGainNodeRef.current.context.state === 'closed') micGainNodeRef.current = audioCtx.createGain();
                    micGainNodeRef.current.gain.value = micVolume / 100;
                    micAudioSourceRef.current.connect(micGainNodeRef.current);
                    micGainNodeRef.current.connect(mediaStreamDestinationRef.current);
                    console.log("Microphone audio track connected to destination.");
                }
            } catch (micErr) {
                const domError = micErr;
                console.error("Error accessing microphone:", domError);
                toast({
                    title: "Erro no Microfone",
                    description: `Não foi possível aceder ao microfone (${domError.name}). Gravação sem áudio do microfone.`,
                    variant: "destructive"
                });
            }
        }
        const videoTracksFromDisplay = displayStreamRef.current.getVideoTracks();
        if (videoTracksFromDisplay.length === 0) {
            console.error("No video tracks from display to record.");
            throw new Error("Nenhuma faixa de vídeo da tela para gravar.");
        }
        const combinedStream = new MediaStream();
        startDrawingOnCanvas(displayStreamRef.current);
        if (canvasStreamRef.current && canvasStreamRef.current.getVideoTracks().length > 0) {
            const canvasVideoTrackForCombined = canvasStreamRef.current.getVideoTracks()[0];
            const canvasTrackSettings = canvasVideoTrackForCombined.getSettings();
            console.log("Using canvas stream for combinedStream. Actual canvas video track settings (source for combinedStream):", canvasTrackSettings);
            if (typeof canvasTrackSettings.frameRate === 'number') {
                console.log("  FPS of canvas stream being added to combinedStream:", canvasTrackSettings.frameRate.toFixed(2));
            }
            combinedStream.addTrack(canvasVideoTrackForCombined.clone());
            console.log("Added canvas video track (screen content) to combinedStream.");
        } else {
            videoTracksFromDisplay.forEach((track)=>combinedStream.addTrack(track.clone()));
            console.warn("CRITICAL: Canvas stream for screen content failed or not ready. Using direct screen track for combinedStream video.");
            toast({
                title: "Aviso: Processamento de Tela",
                description: "Não foi possível iniciar o processamento da tela para a gravação.",
                variant: "default",
                duration: 10000
            });
        }
        if (hasSystemAudio && systemGainNodeRef.current || hasMicAudio && micGainNodeRef.current) {
            mediaStreamDestinationRef.current.stream.getAudioTracks().forEach((track)=>combinedStream.addTrack(track.clone()));
            console.log("Added audio tracks from destination to combinedStream.");
        } else {
            console.log("No audio tracks (system or mic) to add to combinedStream from destination.");
        }
        streamRef.current = combinedStream;
        if (videoRef.current && (isRecording || isClipBufferingActive)) {
            videoRef.current.srcObject = combinedStream;
            console.log("Set srcObject on videoRef for live preview with combinedStream.");
        }
        if (combinedStream.getVideoTracks().length > 0) {
            const videoTrackForRecorder = combinedStream.getVideoTracks()[0];
            const videoTrackSettings = videoTrackForRecorder.getSettings();
            console.log("Effective video track settings FOR MAIN MEDIARECORDER (from combinedStream):", videoTrackSettings);
            if (typeof videoTrackSettings.frameRate === 'number') {
                console.log("  Effective FPS FOR MAIN MEDIARECORDER:", videoTrackSettings.frameRate.toFixed(2));
            } else {
                console.log("  Effective FPS FOR MAIN MEDIARECORDER: Not specified or variable.");
            }
            if (videoTrackSettings.width && videoTrackSettings.height) {
                console.log("  Effective resolution FOR MAIN MEDIARECORDER:", videoTrackSettings.width, "x", videoTrackSettings.height);
            }
        } else {
            console.warn("Combined stream for MediaRecorder has NO video tracks.");
        }
        return combinedStream;
    };
    const getMediaRecorderOptions = (isForWebcam = false)=>{
        let recorderOptions = {};
        let determinedFileExtension = 'webm';
        let targetBitrate;
        let resolutionKeyForLog;
        if (isMaxQualityEnabled) {
            targetBitrate = MAX_QUALITY_BITRATE;
            resolutionKeyForLog = isForWebcam ? "Webcam (Max Quality Override)" : "Screen (Max Quality Override)";
        } else {
            const currentResolutionSettings = RESOLUTIONS.find((r)=>r.value === selectedResolution);
            targetBitrate = currentResolutionSettings?.bitrate || RESOLUTIONS.find((r)=>r.value === "native").bitrate;
            resolutionKeyForLog = selectedResolution;
        }
        recorderOptions.videoBitsPerSecond = targetBitrate;
        console.log(`Target video bitrate for ${isForWebcam ? 'webcam' : 'main'} recording (key "${resolutionKeyForLog}"): ${targetBitrate / (1024 * 1024)} Mbps (Max Quality Flag: ${isMaxQualityEnabled})`);
        const preferredMimeTypes = [
            'video/mp4; codecs="avc1.42E01E, mp4a.40.2"',
            'video/mp4; codecs="h264, mp4a.40.2"',
            'video/mp4; codecs="avc1.4D401E, mp4a.40.2"',
            'video/mp4; codecs="h264"',
            'video/mp4',
            'video/webm; codecs="vp9, opus"',
            'video/webm; codecs="vp8, opus"',
            'video/webm; codecs="vp9"',
            'video/webm'
        ];
        for (const mimeType of preferredMimeTypes){
            if (MediaRecorder.isTypeSupported(mimeType)) {
                recorderOptions.mimeType = mimeType;
                determinedFileExtension = mimeType.includes('mp4') ? 'mp4' : 'webm';
                break;
            }
        }
        const finalMimeType = recorderOptions.mimeType || '';
        if (isForWebcam) {
            delete recorderOptions.audioBitsPerSecond;
        } else if (finalMimeType.includes('opus') || finalMimeType.includes('mp4a') || finalMimeType.includes('aac')) {
            recorderOptions.audioBitsPerSecond = DEFAULT_AUDIO_BITRATE;
        } else {
            console.warn(`Chosen video mimeType "${finalMimeType}" for main recording does not explicitly state an audio codec. Audio might still be recorded if present in stream and format supports it.`);
        }
        console.log(`Determined MediaRecorder options for ${isForWebcam ? 'webcam' : 'main'}:`, recorderOptions, "File extension:", determinedFileExtension);
        return [
            recorderOptions,
            determinedFileExtension
        ];
    };
    const handleStartRecording = async ()=>{
        console.log("Attempting to start recording...");
        if (isClipBufferingActive) {
            await handleToggleClipBuffering();
        }
        setError(null);
        if (videoURL) {
            URL.revokeObjectURL(videoURL);
            setVideoURL(null);
        }
        if (webcamVideoURL) {
            URL.revokeObjectURL(webcamVideoURL);
            setWebcamVideoURL(null);
        }
        fullStreamAndRecorderCleanup();
        const webcamShouldBeActiveForHardware = isWebcamEnabled && selectedWebcamId !== NO_WEBCAM_SELECTED_VALUE;
        await manageSeparateWebcamStream(webcamShouldBeActiveForHardware);
        try {
            let fpsToUse = parseInt(selectedFrameRate, 10);
            let resolutionValueToUse = selectedResolution;
            if (isMaxQualityEnabled) {
                fpsToUse = MAX_QUALITY_FPS;
                resolutionValueToUse = "4k";
                console.log(`Max Quality enabled: Targeting Screen FPS to ${fpsToUse} and Resolution to ${resolutionValueToUse}.`);
            }
            const currentResolutionSettings = RESOLUTIONS.find((r)=>r.value === resolutionValueToUse);
            const videoConstraints = {
                frameRate: {
                    ideal: fpsToUse,
                    max: fpsToUse
                }
            };
            if (currentResolutionSettings?.width && currentResolutionSettings?.height) {
                videoConstraints.width = {
                    ideal: currentResolutionSettings.width,
                    max: currentResolutionSettings.width
                };
                videoConstraints.height = {
                    ideal: currentResolutionSettings.height,
                    max: currentResolutionSettings.height
                };
            }
            if (hideMouseCursor) {
                // @ts-ignore 
                videoConstraints.cursor = "never";
                console.log("Requested to hide mouse cursor for getDisplayMedia.");
            } else {
                // @ts-ignore
                videoConstraints.cursor = "always";
                console.log("Mouse cursor will be visible for getDisplayMedia.");
            }
            console.log("Initial video constraints for getDisplayMedia:", JSON.parse(JSON.stringify(videoConstraints)));
            const activeStream = await setupStreamsAndAudioContext(videoConstraints);
            if (!activeStream || !displayStreamRef.current || activeStream.getVideoTracks().length === 0) {
                console.error("Failed to setup streams or activeStream has no video tracks.");
                // Error might have been set by setupStreamsAndAudioContext already
                if (!error) setError("Falha ao configurar streams ou stream de vídeo indisponível.");
                throw new Error("Falha ao configurar streams ou stream de vídeo indisponível.");
            }
            displayStreamRef.current.getVideoTracks()[0].onended = ()=>{
                console.log("Display stream ended (e.g., user stopped sharing).");
                if (mediaRecorderRef.current?.state === "recording") {
                    handleStopRecording();
                    toast({
                        title: "Gravação Parada",
                        description: "A partilha de tela foi interrompida."
                    });
                }
            };
            recordedChunksRef.current = [];
            const [mainRecorderOptions, mainPreferredExt] = getMediaRecorderOptions(false);
            console.log("Main recorder options from getMediaRecorderOptions:", mainRecorderOptions, "Preferred ext:", mainPreferredExt);
            let mainRecorder;
            try {
                mainRecorder = new MediaRecorder(activeStream, mainRecorderOptions);
            } catch (e) {
                const err = e;
                console.warn("Failed to create main MediaRecorder with preferred options. Trying default.", err, "Stream tracks:", activeStream.getTracks().map((t)=>({
                        kind: t.kind,
                        id: t.id,
                        settings: t.getSettings()
                    })));
                toast({
                    title: "Aviso de Codec",
                    description: `Não foi possível usar configurações otimizadas (${err.name}). Usando padrão.`,
                    variant: "default"
                });
                mainRecorder = new MediaRecorder(activeStream);
            }
            mediaRecorderRef.current = mainRecorder;
            console.log("Main MediaRecorder created. Actual MimeType:", mainRecorder.mimeType, "Actual VideoBitsPerSecond:", mainRecorder.videoBitsPerSecond, "Actual AudioBitsPerSecond:", mainRecorder.audioBitsPerSecond);
            if (mainRecorder.stream.getVideoTracks().length > 0) {
                const mainVideoTrackSettings = mainRecorder.stream.getVideoTracks()[0].getSettings();
                console.log("Main MediaRecorder video track settings (from its own stream):", mainVideoTrackSettings);
                if (typeof mainVideoTrackSettings.frameRate === 'number') {
                    console.log("  FPS the main MediaRecorder will attempt to record (from its own stream):", mainVideoTrackSettings.frameRate.toFixed(2));
                }
            }
            const actualMainMimeType = mediaRecorderRef.current.mimeType;
            let currentTargetFileExtension = mainPreferredExt;
            if (actualMainMimeType?.includes('mp4')) currentTargetFileExtension = 'mp4';
            else if (actualMainMimeType?.includes('webm')) currentTargetFileExtension = 'webm';
            setTargetFileExtension(currentTargetFileExtension);
            console.log("Final targetFileExtension for main recording:", currentTargetFileExtension);
            mainRecorder.ondataavailable = (event)=>{
                if (event.data.size > 0) recordedChunksRef.current.push(event.data);
            };
            mainRecorder.onstop = ()=>{
                console.log("Main MediaRecorder stopped. Recorded chunks length:", recordedChunksRef.current.length);
                const mimeTypeForBlob = mediaRecorderRef.current?.mimeType || (targetFileExtension === 'mp4' ? 'video/mp4' : 'video/webm');
                const blob = new Blob(recordedChunksRef.current, {
                    type: mimeTypeForBlob
                });
                setVideoURL(URL.createObjectURL(blob));
                console.log("Main video blob created. URL set, Size:", blob.size, "Type:", blob.type);
                if (!webcamMediaRecorderRef.current || webcamMediaRecorderRef.current.state === "inactive") {
                    setIsRecording(false);
                }
                toast({
                    title: "Gravação de Tela Concluída",
                    description: `Vídeo da tela pronto para download como .${targetFileExtension}.`
                });
            };
            mainRecorder.onerror = (event)=>{
                const errorEvent = event; // More specific type
                console.error("Main MediaRecorder error: Name:", errorEvent.error?.name, "Message:", errorEvent.error?.message, "Full DOMException:", errorEvent.error);
                const errorName = errorEvent.error?.name || "UnknownError";
                const errorMessage = errorEvent.error?.message || "Erro desconhecido no gravador principal.";
                setError(`Erro no Gravador Principal: ${errorName} - ${errorMessage}`);
                setIsRecording(false);
                fullStreamAndRecorderCleanup();
                toast({
                    title: "Erro na Gravação de Tela",
                    description: `Não foi possível continuar: ${errorName} - ${errorMessage}`,
                    variant: "destructive"
                });
            };
            if (isWebcamEnabled && selectedWebcamId !== NO_WEBCAM_SELECTED_VALUE && separateWebcamStreamRef.current && separateWebcamStreamRef.current.getVideoTracks().length > 0) {
                webcamRecordedChunksRef.current = [];
                const [webcamRecorderOptions, webcamPreferredExt] = getMediaRecorderOptions(true);
                console.log("Final Webcam recorder options for separate recording:", webcamRecorderOptions, "Preferred ext:", webcamPreferredExt);
                let webcamRecorder;
                try {
                    const webcamVideoStream = new MediaStream(separateWebcamStreamRef.current.getVideoTracks());
                    webcamRecorder = new MediaRecorder(webcamVideoStream, webcamRecorderOptions);
                } catch (e) {
                    const err = e;
                    console.warn("Failed to create webcam MediaRecorder with preferred options. Trying default.", err);
                    toast({
                        title: "Aviso de Codec (Webcam)",
                        description: `Não foi possível usar configs otimizadas para webcam (${err.name}). Usando padrão.`,
                        variant: "default"
                    });
                    const webcamVideoStream = new MediaStream(separateWebcamStreamRef.current.getVideoTracks());
                    webcamRecorder = new MediaRecorder(webcamVideoStream);
                }
                webcamMediaRecorderRef.current = webcamRecorder;
                console.log("Webcam MediaRecorder created. Actual MimeType:", webcamRecorder.mimeType, "Actual VideoBitsPerSecond:", webcamRecorder.videoBitsPerSecond);
                if (webcamRecorder.stream.getVideoTracks().length > 0) {
                    const webcamVideoTrackSettings = webcamRecorder.stream.getVideoTracks()[0].getSettings();
                    console.log("Webcam MediaRecorder video track settings:", webcamVideoTrackSettings);
                    if (typeof webcamVideoTrackSettings.frameRate === 'number') {
                        console.log("  FPS the webcam MediaRecorder will attempt to record:", webcamVideoTrackSettings.frameRate.toFixed(2));
                    }
                }
                const actualWebcamMimeType = webcamMediaRecorderRef.current.mimeType;
                let currentTargetWebcamFileExtension = webcamPreferredExt;
                if (actualWebcamMimeType?.includes('mp4')) currentTargetWebcamFileExtension = 'mp4';
                else if (actualWebcamMimeType?.includes('webm')) currentTargetWebcamFileExtension = 'webm';
                setTargetWebcamFileExtension(currentTargetWebcamFileExtension);
                console.log("Final targetWebcamFileExtension for webcam recording:", currentTargetWebcamFileExtension);
                webcamRecorder.ondataavailable = (event)=>{
                    if (event.data.size > 0) webcamRecordedChunksRef.current.push(event.data);
                };
                webcamRecorder.onstop = ()=>{
                    console.log("Webcam MediaRecorder stopped. Chunks:", webcamRecordedChunksRef.current.length);
                    const mimeTypeForBlob = webcamMediaRecorderRef.current?.mimeType || (targetWebcamFileExtension === 'mp4' ? 'video/mp4' : 'video/webm');
                    const blob = new Blob(webcamRecordedChunksRef.current, {
                        type: mimeTypeForBlob
                    });
                    setWebcamVideoURL(URL.createObjectURL(blob));
                    console.log("Webcam video blob created. URL set, Size:", blob.size, "Type:", blob.type);
                    toast({
                        title: "Gravação da Webcam Concluída",
                        description: `Vídeo da webcam pronto para download como .${targetWebcamFileExtension}.`
                    });
                    if (!mediaRecorderRef.current || mediaRecorderRef.current.state === "inactive") {
                        setIsRecording(false);
                        console.log("Both recorders stopped. Cleaning up all streams and audio.");
                        cleanupStreamRefs();
                        cleanupAudioNodes();
                        cleanupSeparateWebcamStream(true);
                    } else {
                        console.log("Webcam recorder stopped, but main recorder might still be active.");
                        cleanupSeparateWebcamStream(true);
                    }
                };
                webcamRecorder.onerror = (event)=>{
                    const errorEvent = event; // More specific type
                    console.error("Webcam MediaRecorder error: Name:", errorEvent.error?.name, "Message:", errorEvent.error?.message, "Full DOMException:", errorEvent.error);
                    const errorName = errorEvent.error?.name || "UnknownError";
                    const errorMessage = errorEvent.error?.message || "Erro desconhecido no gravador da webcam.";
                    toast({
                        title: "Erro na Gravação da Webcam",
                        description: `Não foi possível continuar: ${errorName} - ${errorMessage}`,
                        variant: "destructive"
                    });
                    if (webcamMediaRecorderRef.current && webcamMediaRecorderRef.current.state !== "inactive") {
                        webcamMediaRecorderRef.current.stop();
                    }
                    webcamMediaRecorderRef.current = null;
                    webcamRecordedChunksRef.current = [];
                    cleanupSeparateWebcamStream(true);
                };
                webcamRecorder.start();
                console.log("Separate webcam recording started.");
                toast({
                    title: "Gravação da Webcam Iniciada",
                    description: "A webcam está sendo gravada separadamente."
                });
            } else if (isWebcamEnabled && selectedWebcamId !== NO_WEBCAM_SELECTED_VALUE) {
                console.warn("Webcam enabled and selected, but separateWebcamStreamRef is not available or has no video tracks. Webcam will not be recorded separately.");
            }
            mainRecorder.start();
            console.log("Main screen recording started.");
            toast({
                title: "Gravação de Tela Iniciada",
                description: "A tela está sendo gravada."
            });
            setIsRecording(true);
        } catch (err) {
            const typedError = err;
            console.error("Error starting recording:", typedError);
            let userMessage = "Não foi possível iniciar a gravação.";
            if (typedError.name === 'NotAllowedError') userMessage = "Permissão negada para captura de tela ou áudio.";
            else if (typedError.message) userMessage = typedError.message;
            // If error state isn't already set by a more specific catch (like in setupStreamsAndAudioContext)
            if (!error) setError(userMessage);
            toast({
                title: "Erro ao Iniciar",
                description: userMessage,
                variant: "destructive"
            });
            fullStreamAndRecorderCleanup();
            setIsRecording(false);
        }
    };
    const handleStopRecording = ()=>{
        console.log("Stop recording requested.");
        let mainStopped = false;
        let webcamStopped = false;
        if (mediaRecorderRef.current && (mediaRecorderRef.current.state === "recording" || mediaRecorderRef.current.state === "paused")) {
            mediaRecorderRef.current.stop();
            console.log("Main media recorder stop() called.");
            mainStopped = true;
        }
        if (webcamMediaRecorderRef.current && (webcamMediaRecorderRef.current.state === "recording" || webcamMediaRecorderRef.current.state === "paused")) {
            webcamMediaRecorderRef.current.stop();
            console.log("Separate webcam media recorder stop() called.");
            webcamStopped = true;
        }
        if (!mainStopped && !webcamStopped && isRecording) {
            console.warn("handleStopRecording called while isRecording=true, but no active recorders found. Forcing state update and cleanup.");
            setIsRecording(false);
            fullStreamAndRecorderCleanup();
            return;
        }
        if (videoRef.current) videoRef.current.srcObject = null;
        stopCanvasDrawing();
    };
    const handleToggleClipBuffering = async ()=>{
        console.log(`Toggling clip buffering. Current state: ${isClipBufferingActive}`);
        if (isClipBufferingActive) {
            if (mediaRecorderRef.current && mediaRecorderRef.current.state === "recording") {
                mediaRecorderRef.current.onstop = ()=>{
                    console.log("Clip buffering MediaRecorder stopped (toggle off).");
                    setIsClipBufferingActive(false);
                    clipChunksRef.current = [];
                    fullStreamAndRecorderCleanup();
                    if (videoRef.current) videoRef.current.srcObject = null;
                    toast({
                        title: "Captura para Clipe Parada",
                        description: "Buffer de clipes limpo."
                    });
                };
                mediaRecorderRef.current.stop();
            } else {
                setIsClipBufferingActive(false);
                clipChunksRef.current = [];
                fullStreamAndRecorderCleanup();
                if (videoRef.current) videoRef.current.srcObject = null;
            }
        } else {
            if (isRecording) {
                handleStopRecording();
                await new Promise((resolve)=>setTimeout(resolve, 500));
            }
            setError(null);
            fullStreamAndRecorderCleanup();
            const webcamShouldBeActiveForHardware = isWebcamEnabled && selectedWebcamId !== NO_WEBCAM_SELECTED_VALUE;
            await manageSeparateWebcamStream(webcamShouldBeActiveForHardware);
            try {
                let fpsToUse = parseInt(selectedFrameRate, 10);
                let resolutionValueToUse = selectedResolution;
                if (isMaxQualityEnabled) {
                    fpsToUse = MAX_QUALITY_FPS;
                    resolutionValueToUse = "4k";
                    console.log(`Max Quality enabled: Targeting FPS to ${fpsToUse} and Resolution to ${resolutionValueToUse} for clip buffering setup.`);
                }
                const currentResolutionSettings = RESOLUTIONS.find((r)=>r.value === resolutionValueToUse);
                const videoConstraintsConfig = {
                    frameRate: {
                        ideal: fpsToUse,
                        max: fpsToUse
                    }
                };
                if (currentResolutionSettings?.width && currentResolutionSettings?.height) {
                    videoConstraintsConfig.width = {
                        ideal: currentResolutionSettings.width,
                        max: currentResolutionSettings.width
                    };
                    videoConstraintsConfig.height = {
                        ideal: currentResolutionSettings.height,
                        max: currentResolutionSettings.height
                    };
                }
                if (hideMouseCursor) {
                    // @ts-ignore
                    videoConstraintsConfig.cursor = "never";
                    console.log("Requested to hide mouse cursor for clip buffering.");
                } else {
                    // @ts-ignore
                    videoConstraintsConfig.cursor = "always";
                    console.log("Mouse cursor will be visible for clip buffering.");
                }
                console.log("Video constraints for clip buffering:", JSON.parse(JSON.stringify(videoConstraintsConfig)));
                const activeStream = await setupStreamsAndAudioContext(videoConstraintsConfig);
                if (!activeStream || !displayStreamRef.current || activeStream.getVideoTracks().length === 0) {
                    console.error("Failed to setup streams for clip buffering or activeStream has no video tracks.");
                    if (!error) setError("Falha ao configurar streams para clipe.");
                    throw new Error("Falha ao configurar streams para clipe.");
                }
                if (activeStream.getVideoTracks().length > 0) {
                    const clipVideoTrackSettings = activeStream.getVideoTracks()[0].getSettings();
                    console.log("Clip buffering activeStream video track settings:", clipVideoTrackSettings);
                    if (typeof clipVideoTrackSettings.frameRate === 'number') {
                        console.log("  FPS the clip buffering MediaRecorder will attempt to use:", clipVideoTrackSettings.frameRate.toFixed(2));
                    }
                }
                displayStreamRef.current.getVideoTracks()[0].onended = ()=>{
                    console.log("Display stream ended during clip buffering.");
                    if (mediaRecorderRef.current?.state === "recording" && isClipBufferingActive) {
                        handleToggleClipBuffering();
                        toast({
                            title: "Captura para Clipe Parada",
                            description: "A partilha de tela foi interrompida."
                        });
                    }
                };
                clipChunksRef.current = [];
                const [recorderOptions, clipPreferredExt] = getMediaRecorderOptions(false);
                console.log("MediaRecorder options for clip buffering:", recorderOptions, "Preferred ext:", clipPreferredExt);
                let recorder;
                try {
                    recorder = new MediaRecorder(activeStream, recorderOptions);
                } catch (e) {
                    const err = e;
                    console.warn("Failed to create MediaRecorder with preferred options for clipping. Trying default.", err);
                    toast({
                        title: "Aviso de Codec (Clipe)",
                        description: `Não foi possível usar configs otimizadas para clipe (${err.name}). Usando padrão.`,
                        variant: "default"
                    });
                    recorder = new MediaRecorder(activeStream);
                }
                mediaRecorderRef.current = recorder;
                console.log("Clip buffering MediaRecorder created. Actual MimeType:", recorder.mimeType);
                recorder.ondataavailable = (event)=>{
                    if (event.data.size > 0) {
                        const newChunk = {
                            blob: event.data,
                            timestamp: Date.now()
                        };
                        clipChunksRef.current.push(newChunk);
                        const cutoffTimestamp = Date.now() - CLIP_DURATION_MS - MEDIA_RECORDER_TIMESLICE_MS_FOR_CLIPS * 2;
                        clipChunksRef.current = clipChunksRef.current.filter((chunk)=>chunk.timestamp >= cutoffTimestamp);
                    }
                };
                recorder.onstop = ()=>{
                    console.log("Clip buffering MediaRecorder stopped (generic onstop).");
                    if (isClipBufferingActive) {
                        setIsClipBufferingActive(false);
                        clipChunksRef.current = [];
                        fullStreamAndRecorderCleanup();
                        toast({
                            title: "Captura para Clipe Interrompida",
                            variant: "destructive"
                        });
                    }
                };
                recorder.onerror = (event)=>{
                    const errorEvent = event;
                    console.error("MediaRecorder error (clip buffering): Name:", errorEvent.error?.name, "Message:", errorEvent.error?.message, "Full DOMException:", errorEvent.error);
                    const errorName = errorEvent.error?.name || "UnknownError";
                    const errorMessage = errorEvent.error?.message || "Erro desconhecido na captura para clipe.";
                    setError(`Erro na captura para clipe: ${errorName} - ${errorMessage}`);
                    setIsClipBufferingActive(false);
                    fullStreamAndRecorderCleanup();
                    toast({
                        title: "Erro na Captura de Clipe",
                        description: `${errorName}: ${errorMessage}`,
                        variant: "destructive"
                    });
                };
                recorder.start(MEDIA_RECORDER_TIMESLICE_MS_FOR_CLIPS);
                console.log("Clip buffering started with timeslice:", MEDIA_RECORDER_TIMESLICE_MS_FOR_CLIPS);
                setIsClipBufferingActive(true);
                toast({
                    title: "Captura para Clipe Iniciada",
                    description: `Buffering dos últimos ${CLIP_DURATION_MS / 1000} segundos.`
                });
            } catch (err) {
                const typedError = err;
                console.error("Error starting clip buffering:", typedError);
                let userMessage = "Não foi possível iniciar a captura para clipe.";
                if (typedError.name === 'NotAllowedError') userMessage = "Permissão negada.";
                else if (typedError.message) userMessage = typedError.message;
                if (!error) setError(userMessage);
                toast({
                    title: "Erro na Captura de Clipe",
                    description: userMessage,
                    variant: "destructive"
                });
                fullStreamAndRecorderCleanup();
                setIsClipBufferingActive(false);
            }
        }
    };
    const handleSaveClip = ()=>{
        if (!isClipBufferingActive || clipChunksRef.current.length === 0) {
            toast({
                title: "Não é possível Salvar Clipe",
                description: "A captura para clipe não está ativa ou não há dados suficientes.",
                variant: "destructive"
            });
            return;
        }
        console.log("Saving clip. Number of chunks:", clipChunksRef.current.length);
        let clipMimeType = targetFileExtension === 'mp4' ? 'video/mp4' : 'video/webm';
        if (mediaRecorderRef.current?.mimeType) {
            clipMimeType = mediaRecorderRef.current.mimeType;
        }
        console.log("Using MimeType for clip blob:", clipMimeType);
        const clipFileExtension = clipMimeType.includes('mp4') ? 'mp4' : clipMimeType.includes('webm') ? 'webm' : 'bin';
        const now = Date.now();
        const relevantChunks = clipChunksRef.current.filter((chunk)=>now - chunk.timestamp <= CLIP_DURATION_MS).map((c)=>c.blob);
        if (relevantChunks.length === 0) {
            toast({
                title: "Erro ao Criar Clipe",
                description: "Não há dados suficientes dos últimos segundos para o clipe.",
                variant: "destructive"
            });
            console.error("No relevant chunks found for saving clip.");
            return;
        }
        const clipBlob = new Blob(relevantChunks, {
            type: clipMimeType
        });
        if (clipBlob.size === 0) {
            toast({
                title: "Erro ao Criar Clipe",
                description: "O clipe gerado está vazio.",
                variant: "destructive"
            });
            console.error("Generated clip blob is empty.");
            return;
        }
        console.log("Clip blob created. Size:", clipBlob.size, "Type:", clipBlob.type);
        const url = URL.createObjectURL(clipBlob);
        if (lastClipUrl) URL.revokeObjectURL(lastClipUrl);
        setLastClipUrl(url);
        const a = document.createElement('a');
        a.href = url;
        const timestamp = new Date().toISOString().replace(/[:.]/g, '-').replace(/T/, '_').replace(/Z$/, '');
        a.download = `gravador_jp_clipe_${timestamp}.${clipFileExtension}`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        toast({
            title: "Clipe Salvo!",
            description: `Os últimos segundos foram salvos como .${clipFileExtension}.`
        });
    };
    const handleDownload = ()=>{
        if (videoURL) {
            const a = document.createElement('a');
            a.href = videoURL;
            const timestamp = new Date().toISOString().replace(/[:.]/g, '-').replace(/T/, '_').replace(/Z$/, '');
            a.download = `gravador_jp_tela_${timestamp}.${targetFileExtension}`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            toast({
                title: "Download da Tela Iniciado",
                description: `Seu vídeo está sendo baixado como .${targetFileExtension}.`
            });
        }
    };
    const handleDownloadWebcam = ()=>{
        if (webcamVideoURL) {
            const a = document.createElement('a');
            a.href = webcamVideoURL;
            const timestamp = new Date().toISOString().replace(/[:.]/g, '-').replace(/T/, '_').replace(/Z$/, '');
            a.download = `gravador_jp_webcam_${timestamp}.${targetWebcamFileExtension}`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            toast({
                title: "Download da Webcam Iniciado",
                description: `Vídeo da webcam baixado como .${targetWebcamFileExtension}.`
            });
        }
    };
    const handleMicVolumeChange = (value)=>{
        const newVolume = value[0];
        setMicVolume(newVolume);
        if (micGainNodeRef.current) micGainNodeRef.current.gain.value = newVolume / 100;
    };
    const handleSystemVolumeChange = (value)=>{
        const newVolume = value[0];
        setSystemVolume(newVolume);
        if (systemGainNodeRef.current) systemGainNodeRef.current.gain.value = newVolume / 100;
    };
    const handleMaxQualityToggle = (checked)=>{
        setIsMaxQualityEnabled(checked);
        if (checked) {
            setSelectedFrameRate(String(MAX_QUALITY_FPS));
            setSelectedResolution("4k");
            toast({
                title: "Qualidade Máxima Ativada!",
                description: `Otimizado para ${MAX_QUALITY_FPS} FPS, Resolução 4K e Bitrate Alto (~${MAX_QUALITY_BITRATE / (1024 * 1024)}Mbps). O desempenho real pode variar.`,
                duration: 7000
            });
        } else {
            setSelectedFrameRate("60");
            setSelectedResolution("native");
            toast({
                title: "Qualidade Máxima Desativada",
                description: "Retornando às configurações padrão. Pode ajustar FPS e Resolução manualmente."
            });
        }
    };
    const videoPreviewStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "ScreenRecorderControls.useMemo[videoPreviewStyle]": ()=>{
            return {
                maxWidth: '100%',
                maxHeight: 'calc(100vh - 300px)',
                objectFit: 'contain'
            };
        }
    }["ScreenRecorderControls.useMemo[videoPreviewStyle]"], []);
    const controlsDisabled = isRecording || isClipBufferingActive;
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$card$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Card"], {
        className: "w-full max-w-4xl shadow-2xl bg-card/95 backdrop-blur-lg border border-border/30 transition-all duration-300 ease-out hover:shadow-accent/20",
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$card$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CardHeader"], {
                className: "pb-4 border-b border-border/20",
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "flex items-center space-x-4",
                    children: [
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                            className: "p-3 bg-gradient-to-br from-primary to-accent rounded-xl shadow-lg",
                            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$monitor$2d$smartphone$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__MonitorSmartphone$3e$__["MonitorSmartphone"], {
                                className: `h-10 w-10 text-primary-foreground ${controlsDisabled ? 'animate-pulse' : 'group-hover:animate-gentle-pulse'}`
                            }, void 0, false, {
                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                lineNumber: 1247,
                                columnNumber: 13
                            }, this)
                        }, void 0, false, {
                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                            lineNumber: 1246,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$card$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CardTitle"], {
                                    className: "text-3xl font-extrabold tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-primary via-accent to-primary pb-1",
                                    children: "Gravador Avançado"
                                }, void 0, false, {
                                    fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                    lineNumber: 1250,
                                    columnNumber: 13
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$card$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CardDescription"], {
                                    className: "text-md text-muted-foreground",
                                    children: "Capture sua tela e webcam com configurações personalizadas."
                                }, void 0, false, {
                                    fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                    lineNumber: 1253,
                                    columnNumber: 13
                                }, this)
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                            lineNumber: 1249,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                    lineNumber: 1245,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                lineNumber: 1244,
                columnNumber: 7
            }, this),
            error && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "p-6",
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$alert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Alert"], {
                    variant: "destructive",
                    className: "animate-in fade-in duration-300 shadow-lg",
                    children: [
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$circle$2d$alert$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__AlertCircle$3e$__["AlertCircle"], {
                            className: "h-5 w-5"
                        }, void 0, false, {
                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                            lineNumber: 1263,
                            columnNumber: 13
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$alert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AlertTitle"], {
                            className: "font-semibold",
                            children: "Erro Encontrado"
                        }, void 0, false, {
                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                            lineNumber: 1264,
                            columnNumber: 13
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$alert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AlertDescription"], {
                            children: error
                        }, void 0, false, {
                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                            lineNumber: 1265,
                            columnNumber: 13
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                    lineNumber: 1262,
                    columnNumber: 11
                }, this)
            }, void 0, false, {
                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                lineNumber: 1261,
                columnNumber: 9
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$card$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CardContent"], {
                className: "p-0 md:p-6 grid md:grid-cols-3 gap-x-8 gap-y-6",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "md:col-span-1 space-y-3 p-6 md:p-0 bg-background/70 md:bg-transparent rounded-lg md:rounded-none border-b md:border-none border-border/20",
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("h3", {
                                className: "text-xl font-semibold mb-4 flex items-center text-primary",
                                children: [
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$settings$2d$2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Settings2$3e$__["Settings2"], {
                                        className: "mr-3 h-7 w-7"
                                    }, void 0, false, {
                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                        lineNumber: 1273,
                                        columnNumber: 13
                                    }, this),
                                    "Configurações"
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                lineNumber: 1272,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$accordion$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Accordion"], {
                                type: "multiple",
                                defaultValue: [
                                    'audio',
                                    'video_quality',
                                    'webcam_config'
                                ],
                                className: "w-full",
                                children: [
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$accordion$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccordionItem"], {
                                        value: "audio",
                                        children: [
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$accordion$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccordionTrigger"], {
                                                className: "text-base hover:no-underline group px-2 py-3 rounded-md hover:bg-accent/5 transition-colors",
                                                children: [
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$audio$2d$lines$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__AudioLines$3e$__["AudioLines"], {
                                                        className: "mr-2 h-5 w-5 text-accent group-data-[state=open]:text-primary transition-colors"
                                                    }, void 0, false, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1279,
                                                        columnNumber: 17
                                                    }, this),
                                                    " Configurações de Áudio"
                                                ]
                                            }, void 0, true, {
                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                lineNumber: 1278,
                                                columnNumber: 15
                                            }, this),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$accordion$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccordionContent"], {
                                                className: "pt-4 space-y-5 border-l border-border/30 ml-2 pl-4",
                                                children: [
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                        className: "space-y-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                                                                htmlFor: "mic-select",
                                                                className: "flex items-center text-sm font-medium",
                                                                children: [
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$mic$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Mic$3e$__["Mic"], {
                                                                        className: "mr-2 h-4 w-4 text-muted-foreground"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1283,
                                                                        columnNumber: 97
                                                                    }, this),
                                                                    " Microfone"
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1283,
                                                                columnNumber: 19
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Select"], {
                                                                value: selectedMicrophoneId,
                                                                onValueChange: setSelectedMicrophoneId,
                                                                disabled: controlsDisabled,
                                                                children: [
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectTrigger"], {
                                                                        id: "mic-select",
                                                                        className: "bg-input/50",
                                                                        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectValue"], {
                                                                            placeholder: "Nenhum microfone"
                                                                        }, void 0, false, {
                                                                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                            lineNumber: 1285,
                                                                            columnNumber: 76
                                                                        }, this)
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1285,
                                                                        columnNumber: 21
                                                                    }, this),
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectContent"], {
                                                                        children: [
                                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectItem"], {
                                                                                value: NO_MICROPHONE_SELECTED_VALUE,
                                                                                children: "Nenhum (sem áudio do microfone)"
                                                                            }, void 0, false, {
                                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                                lineNumber: 1287,
                                                                                columnNumber: 23
                                                                            }, this),
                                                                            microphones.map((mic)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectItem"], {
                                                                                    value: mic.deviceId,
                                                                                    children: mic.label || `Microfone ${mic.deviceId.substring(0, 8)}`
                                                                                }, mic.deviceId || `mic-${mic.label}`, false, {
                                                                                    fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                                    lineNumber: 1288,
                                                                                    columnNumber: 50
                                                                                }, this))
                                                                        ]
                                                                    }, void 0, true, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1286,
                                                                        columnNumber: 21
                                                                    }, this)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1284,
                                                                columnNumber: 19
                                                            }, this)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1282,
                                                        columnNumber: 17
                                                    }, this),
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                        className: "space-y-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                                                                htmlFor: "mic-volume",
                                                                className: "flex items-center text-sm font-medium",
                                                                children: [
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$volume$2d$1$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Volume1$3e$__["Volume1"], {
                                                                        className: "mr-2 h-4 w-4 text-muted-foreground"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1293,
                                                                        columnNumber: 97
                                                                    }, this),
                                                                    " Volume do Microfone"
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1293,
                                                                columnNumber: 19
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$slider$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Slider"], {
                                                                id: "mic-volume",
                                                                min: 0,
                                                                max: 200,
                                                                step: 1,
                                                                value: [
                                                                    micVolume
                                                                ],
                                                                onValueChange: handleMicVolumeChange,
                                                                disabled: controlsDisabled || selectedMicrophoneId === NO_MICROPHONE_SELECTED_VALUE
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1294,
                                                                columnNumber: 19
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                                                className: "text-xs text-muted-foreground text-right",
                                                                children: [
                                                                    micVolume,
                                                                    "%"
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1295,
                                                                columnNumber: 19
                                                            }, this)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1292,
                                                        columnNumber: 17
                                                    }, this),
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                        className: "flex items-center space-x-3 pt-1",
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$switch$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Switch"], {
                                                                id: "noise-suppression",
                                                                checked: noiseSuppressionEnabled,
                                                                onCheckedChange: setNoiseSuppressionEnabled,
                                                                disabled: controlsDisabled || selectedMicrophoneId === NO_MICROPHONE_SELECTED_VALUE
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1298,
                                                                columnNumber: 19
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                                                                htmlFor: "noise-suppression",
                                                                className: "flex items-center text-sm font-medium cursor-pointer",
                                                                children: [
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$settings$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Settings$3e$__["Settings"], {
                                                                        className: "mr-2 h-4 w-4 text-muted-foreground"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1299,
                                                                        columnNumber: 119
                                                                    }, this),
                                                                    " Eliminar Ruído"
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1299,
                                                                columnNumber: 19
                                                            }, this)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1297,
                                                        columnNumber: 17
                                                    }, this),
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                        className: "space-y-2 pt-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                                                                htmlFor: "system-volume",
                                                                className: "flex items-center text-sm font-medium",
                                                                children: [
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$volume$2d$2$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Volume2$3e$__["Volume2"], {
                                                                        className: "mr-2 h-4 w-4 text-muted-foreground"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1302,
                                                                        columnNumber: 100
                                                                    }, this),
                                                                    " Volume do Áudio do Sistema"
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1302,
                                                                columnNumber: 19
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$slider$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Slider"], {
                                                                id: "system-volume",
                                                                min: 0,
                                                                max: 200,
                                                                step: 1,
                                                                value: [
                                                                    systemVolume
                                                                ],
                                                                onValueChange: handleSystemVolumeChange,
                                                                disabled: controlsDisabled
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1303,
                                                                columnNumber: 19
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                                                className: "text-xs text-muted-foreground text-right",
                                                                children: [
                                                                    systemVolume,
                                                                    "%"
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1304,
                                                                columnNumber: 19
                                                            }, this)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1301,
                                                        columnNumber: 17
                                                    }, this),
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                        className: "space-y-2 pt-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                                                                htmlFor: "speaker-select",
                                                                className: "flex items-center text-sm font-medium",
                                                                children: [
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$speaker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Speaker$3e$__["Speaker"], {
                                                                        className: "mr-2 h-4 w-4 text-muted-foreground"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1307,
                                                                        columnNumber: 101
                                                                    }, this),
                                                                    " Saída de Áudio (Pré-visualização)"
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1307,
                                                                columnNumber: 19
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Select"], {
                                                                value: selectedAudioOutputDeviceId,
                                                                onValueChange: setSelectedAudioOutputDeviceId,
                                                                disabled: controlsDisabled,
                                                                children: [
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectTrigger"], {
                                                                        id: "speaker-select",
                                                                        className: "bg-input/50",
                                                                        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectValue"], {
                                                                            placeholder: "Padrão do Sistema"
                                                                        }, void 0, false, {
                                                                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                            lineNumber: 1309,
                                                                            columnNumber: 80
                                                                        }, this)
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1309,
                                                                        columnNumber: 21
                                                                    }, this),
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectContent"], {
                                                                        children: [
                                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectItem"], {
                                                                                value: DEFAULT_AUDIO_OUTPUT_DEVICE_ID,
                                                                                children: "Padrão do Sistema"
                                                                            }, void 0, false, {
                                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                                lineNumber: 1311,
                                                                                columnNumber: 23
                                                                            }, this),
                                                                            audioOutputDevices.map((speaker)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectItem"], {
                                                                                    value: speaker.deviceId,
                                                                                    children: speaker.label || `Alto-falante ${speaker.deviceId.substring(0, 8)}`
                                                                                }, speaker.deviceId || `speaker-${speaker.label}`, false, {
                                                                                    fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                                    lineNumber: 1312,
                                                                                    columnNumber: 61
                                                                                }, this))
                                                                        ]
                                                                    }, void 0, true, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1310,
                                                                        columnNumber: 21
                                                                    }, this)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1308,
                                                                columnNumber: 19
                                                            }, this)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1306,
                                                        columnNumber: 18
                                                    }, this)
                                                ]
                                            }, void 0, true, {
                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                lineNumber: 1281,
                                                columnNumber: 15
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                        lineNumber: 1277,
                                        columnNumber: 13
                                    }, this),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$accordion$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccordionItem"], {
                                        value: "video_quality",
                                        children: [
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$accordion$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccordionTrigger"], {
                                                className: "text-base hover:no-underline group px-2 py-3 rounded-md hover:bg-accent/5 transition-colors",
                                                children: [
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$video$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__VideoIcon$3e$__["VideoIcon"], {
                                                        className: "mr-2 h-5 w-5 text-accent group-data-[state=open]:text-primary transition-colors"
                                                    }, void 0, false, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1321,
                                                        columnNumber: 17
                                                    }, this),
                                                    " Vídeo"
                                                ]
                                            }, void 0, true, {
                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                lineNumber: 1320,
                                                columnNumber: 15
                                            }, this),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$accordion$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccordionContent"], {
                                                className: "pt-4 space-y-5 border-l border-border/30 ml-2 pl-4",
                                                children: [
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                        className: "flex items-center space-x-3",
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$switch$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Switch"], {
                                                                id: "max-quality-switch",
                                                                checked: isMaxQualityEnabled,
                                                                onCheckedChange: handleMaxQualityToggle,
                                                                disabled: controlsDisabled
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1325,
                                                                columnNumber: 19
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                                                                htmlFor: "max-quality-switch",
                                                                className: "flex items-center text-sm font-medium cursor-pointer",
                                                                children: [
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$star$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Star$3e$__["Star"], {
                                                                        className: "mr-2 h-4 w-4 text-yellow-400 animate-pulse"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1332,
                                                                        columnNumber: 21
                                                                    }, this),
                                                                    " Ativar Qualidade Máxima"
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1331,
                                                                columnNumber: 19
                                                            }, this)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1324,
                                                        columnNumber: 17
                                                    }, this),
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                                        className: "text-xs text-muted-foreground pt-1 pl-8",
                                                        children: [
                                                            "Otimiza para ",
                                                            MAX_QUALITY_FPS,
                                                            " FPS, 4K e alto bitrate (~",
                                                            MAX_QUALITY_BITRATE / (1024 * 1024),
                                                            "Mbps). O desempenho real pode variar."
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1335,
                                                        columnNumber: 18
                                                    }, this),
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                        className: "space-y-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                                                                htmlFor: "fps-select",
                                                                className: "flex items-center text-sm font-medium",
                                                                children: [
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$film$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Film$3e$__["Film"], {
                                                                        className: "mr-2 h-4 w-4 text-muted-foreground"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1340,
                                                                        columnNumber: 97
                                                                    }, this),
                                                                    " Taxa de Quadros (FPS)"
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1340,
                                                                columnNumber: 19
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Select"], {
                                                                value: selectedFrameRate,
                                                                onValueChange: setSelectedFrameRate,
                                                                disabled: controlsDisabled || isMaxQualityEnabled,
                                                                children: [
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectTrigger"], {
                                                                        id: "fps-select",
                                                                        className: "bg-input/50",
                                                                        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectValue"], {
                                                                            placeholder: "Selecione FPS"
                                                                        }, void 0, false, {
                                                                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                            lineNumber: 1342,
                                                                            columnNumber: 76
                                                                        }, this)
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1342,
                                                                        columnNumber: 21
                                                                    }, this),
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectContent"], {
                                                                        children: FRAME_RATES.map((rate)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectItem"], {
                                                                                value: rate.value,
                                                                                children: rate.label
                                                                            }, rate.value, false, {
                                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                                lineNumber: 1343,
                                                                                columnNumber: 62
                                                                            }, this))
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1343,
                                                                        columnNumber: 21
                                                                    }, this)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1341,
                                                                columnNumber: 19
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                                                className: "text-xs text-muted-foreground pt-1",
                                                                children: "FPS real pode variar. Tenta atingir o FPS selecionado."
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1345,
                                                                columnNumber: 19
                                                            }, this)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1339,
                                                        columnNumber: 17
                                                    }, this),
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                        className: "space-y-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                                                                htmlFor: "resolution-select",
                                                                className: "flex items-center text-sm font-medium",
                                                                children: [
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$maximize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Maximize$3e$__["Maximize"], {
                                                                        className: "mr-2 h-4 w-4 text-muted-foreground"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1348,
                                                                        columnNumber: 104
                                                                    }, this),
                                                                    " Resolução da Gravação"
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1348,
                                                                columnNumber: 19
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Select"], {
                                                                value: selectedResolution,
                                                                onValueChange: setSelectedResolution,
                                                                disabled: controlsDisabled || isMaxQualityEnabled,
                                                                children: [
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectTrigger"], {
                                                                        id: "resolution-select",
                                                                        className: "bg-input/50",
                                                                        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectValue"], {
                                                                            placeholder: "Selecione Resolução"
                                                                        }, void 0, false, {
                                                                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                            lineNumber: 1350,
                                                                            columnNumber: 83
                                                                        }, this)
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1350,
                                                                        columnNumber: 21
                                                                    }, this),
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectContent"], {
                                                                        children: RESOLUTIONS.map((res)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectItem"], {
                                                                                value: res.value,
                                                                                children: res.label
                                                                            }, res.value, false, {
                                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                                lineNumber: 1351,
                                                                                columnNumber: 61
                                                                            }, this))
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1351,
                                                                        columnNumber: 21
                                                                    }, this)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1349,
                                                                columnNumber: 19
                                                            }, this)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1347,
                                                        columnNumber: 17
                                                    }, this),
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                        className: "flex items-center space-x-3 pt-1",
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$switch$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Switch"], {
                                                                id: "hide-mouse-cursor",
                                                                checked: hideMouseCursor,
                                                                onCheckedChange: setHideMouseCursor,
                                                                disabled: controlsDisabled
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1355,
                                                                columnNumber: 19
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                                                                htmlFor: "hide-mouse-cursor",
                                                                className: "flex items-center text-sm font-medium cursor-pointer",
                                                                children: [
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$mouse$2d$off$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__MouseOff$3e$__["MouseOff"], {
                                                                        className: "mr-2 h-4 w-4 text-muted-foreground"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1356,
                                                                        columnNumber: 119
                                                                    }, this),
                                                                    " Esconder Cursor do Mouse"
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1356,
                                                                columnNumber: 19
                                                            }, this)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1354,
                                                        columnNumber: 17
                                                    }, this),
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                                        className: "text-xs text-muted-foreground pt-1",
                                                        children: "Formatos: MP4 (prioridade), WebM. Bitrate ajustado pela resolução/qualidade."
                                                    }, void 0, false, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1358,
                                                        columnNumber: 18
                                                    }, this)
                                                ]
                                            }, void 0, true, {
                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                lineNumber: 1323,
                                                columnNumber: 15
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                        lineNumber: 1319,
                                        columnNumber: 13
                                    }, this),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$accordion$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccordionItem"], {
                                        value: "webcam_config",
                                        children: [
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$accordion$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccordionTrigger"], {
                                                className: "text-base hover:no-underline group px-2 py-3 rounded-md hover:bg-accent/5 transition-colors",
                                                children: [
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$webcam$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__WebcamIcon$3e$__["WebcamIcon"], {
                                                        className: "mr-2 h-5 w-5 text-accent group-data-[state=open]:text-primary transition-colors"
                                                    }, void 0, false, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1364,
                                                        columnNumber: 21
                                                    }, this),
                                                    " Webcam"
                                                ]
                                            }, void 0, true, {
                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                lineNumber: 1363,
                                                columnNumber: 17
                                            }, this),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$accordion$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AccordionContent"], {
                                                className: "pt-4 space-y-5 border-l border-border/30 ml-2 pl-4",
                                                children: [
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                        className: "flex items-center space-x-3",
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$switch$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Switch"], {
                                                                id: "enable-webcam-recording",
                                                                checked: isWebcamEnabled,
                                                                onCheckedChange: (checked)=>{
                                                                    setIsWebcamEnabled(checked);
                                                                    if (checked && selectedWebcamId === NO_WEBCAM_SELECTED_VALUE && webcamDevices.length > 0) {
                                                                        setSelectedWebcamId(webcamDevices[0].deviceId); // Auto-select first if enabling
                                                                    } else if (!checked) {
                                                                        cleanupSeparateWebcamStream(true); // Clean up if disabling
                                                                    // setSelectedWebcamId(NO_WEBCAM_SELECTED_VALUE); // Optionally deselect
                                                                    }
                                                                },
                                                                disabled: controlsDisabled || webcamDevices.length === 0
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1368,
                                                                columnNumber: 25
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                                                                htmlFor: "enable-webcam-recording",
                                                                className: "flex items-center text-sm font-medium cursor-pointer",
                                                                children: [
                                                                    isWebcamEnabled ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$circle$2d$check$2d$big$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__CheckCircle$3e$__["CheckCircle"], {
                                                                        className: "mr-2 h-4 w-4 text-green-500"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1383,
                                                                        columnNumber: 47
                                                                    }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$webcam$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__WebcamIcon$3e$__["WebcamIcon"], {
                                                                        className: "mr-2 h-4 w-4"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1383,
                                                                        columnNumber: 104
                                                                    }, this),
                                                                    "Gravar Webcam (Arquivo Separado)"
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1382,
                                                                columnNumber: 25
                                                            }, this)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1367,
                                                        columnNumber: 22
                                                    }, this),
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                        className: "space-y-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                                                                htmlFor: "webcam-select",
                                                                className: "flex items-center text-sm font-medium",
                                                                children: [
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$camera$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Camera$3e$__["Camera"], {
                                                                        className: "mr-2 h-4 w-4 text-muted-foreground"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1388,
                                                                        columnNumber: 106
                                                                    }, this),
                                                                    " Selecionar Webcam"
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1388,
                                                                columnNumber: 25
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Select"], {
                                                                value: selectedWebcamId,
                                                                onValueChange: (value)=>{
                                                                    setSelectedWebcamId(value);
                                                                    if (value !== NO_WEBCAM_SELECTED_VALUE && !isWebcamEnabled) {
                                                                        setIsWebcamEnabled(true); // Enable switch if a cam is selected and switch is off
                                                                    } else if (value === NO_WEBCAM_SELECTED_VALUE && isWebcamEnabled) {
                                                                    // setIsWebcamEnabled(false); // Optionally disable if "None" selected, or let user do it explicitly
                                                                    }
                                                                },
                                                                disabled: controlsDisabled || !isWebcamEnabled || webcamDevices.length === 0,
                                                                children: [
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectTrigger"], {
                                                                        id: "webcam-select",
                                                                        className: "bg-input/50",
                                                                        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectValue"], {
                                                                            placeholder: "Nenhuma webcam selecionada"
                                                                        }, void 0, false, {
                                                                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                            lineNumber: 1401,
                                                                            columnNumber: 83
                                                                        }, this)
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1401,
                                                                        columnNumber: 25
                                                                    }, this),
                                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectContent"], {
                                                                        children: [
                                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectItem"], {
                                                                                value: NO_WEBCAM_SELECTED_VALUE,
                                                                                children: "Nenhuma webcam"
                                                                            }, void 0, false, {
                                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                                lineNumber: 1403,
                                                                                columnNumber: 29
                                                                            }, this),
                                                                            webcamDevices.map((cam)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$select$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SelectItem"], {
                                                                                    value: cam.deviceId,
                                                                                    children: cam.label || `Webcam ${cam.deviceId.substring(0, 8)}`
                                                                                }, cam.deviceId || `cam-${cam.label}`, false, {
                                                                                    fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                                    lineNumber: 1404,
                                                                                    columnNumber: 58
                                                                                }, this))
                                                                        ]
                                                                    }, void 0, true, {
                                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                        lineNumber: 1402,
                                                                        columnNumber: 25
                                                                    }, this)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1389,
                                                                columnNumber: 25
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                                                className: "text-xs text-muted-foreground pt-1",
                                                                children: [
                                                                    webcamDevices.length === 0 ? "Nenhuma webcam detectada." : isWebcamEnabled && selectedWebcamId !== NO_WEBCAM_SELECTED_VALUE ? "A webcam selecionada será gravada em um arquivo separado." : "Ative e selecione uma webcam para gravação separada.",
                                                                    "A pré-visualização da webcam não é mostrada aqui."
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1407,
                                                                columnNumber: 26
                                                            }, this)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1387,
                                                        columnNumber: 21
                                                    }, this),
                                                    !hasCameraPermission && isWebcamEnabled && selectedWebcamId !== NO_WEBCAM_SELECTED_VALUE && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$alert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Alert"], {
                                                        variant: "destructive",
                                                        className: "animate-in fade-in duration-300 shadow-md",
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$circle$2d$alert$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__AlertCircle$3e$__["AlertCircle"], {
                                                                className: "h-4 w-4"
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1415,
                                                                columnNumber: 25
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$alert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AlertTitle"], {
                                                                className: "font-semibold",
                                                                children: "Permissão da Webcam Necessária"
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1416,
                                                                columnNumber: 25
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$alert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AlertDescription"], {
                                                                children: "Conceda permissão à câmera no navegador para usar a webcam."
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                                lineNumber: 1417,
                                                                columnNumber: 25
                                                            }, this)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1414,
                                                        columnNumber: 25
                                                    }, this)
                                                ]
                                            }, void 0, true, {
                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                lineNumber: 1366,
                                                columnNumber: 17
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                        lineNumber: 1362,
                                        columnNumber: 13
                                    }, this)
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                lineNumber: 1276,
                                columnNumber: 11
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                        lineNumber: 1271,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "md:col-span-2 space-y-6 p-6 md:p-0",
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                className: "relative aspect-video bg-muted/70 rounded-lg overflow-hidden flex items-center justify-center border-2 border-border/50 shadow-xl group transition-all duration-300 ease-out hover:border-accent/70",
                                children: videoURL && !isRecording && !isClipBufferingActive ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("video", {
                                    ref: videoRef,
                                    src: videoURL,
                                    controls: true,
                                    className: "w-full h-full",
                                    style: videoPreviewStyle,
                                    onLoadedMetadata: ()=>{
                                        if (videoRef.current && selectedAudioOutputDeviceId !== DEFAULT_AUDIO_OUTPUT_DEVICE_ID) {
                                            if (typeof videoRef.current.setSinkId === 'function') {
                                                videoRef.current.setSinkId(selectedAudioOutputDeviceId).catch((err)=>console.error("Error setting sink ID for recorded video:", err));
                                            }
                                        }
                                    }
                                }, void 0, false, {
                                    fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                    lineNumber: 1430,
                                    columnNumber: 15
                                }, this) : (isRecording || isClipBufferingActive) && streamRef.current && streamRef.current.getVideoTracks().length > 0 ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("video", {
                                    ref: videoRef,
                                    autoPlay: true,
                                    muted: true,
                                    playsInline: true,
                                    className: "w-full h-full object-contain",
                                    style: videoPreviewStyle,
                                    onLoadedMetadata: ()=>{
                                        if (videoRef.current && selectedAudioOutputDeviceId !== DEFAULT_AUDIO_OUTPUT_DEVICE_ID) {
                                            if (typeof videoRef.current.setSinkId === 'function') {
                                                videoRef.current.setSinkId(selectedAudioOutputDeviceId).catch((err)=>console.error("Error setting sink ID for live preview:", err));
                                            }
                                        }
                                        if (videoRef.current && streamRef.current) {
                                            console.log("Setting srcObject for live preview video element with stream:", streamRef.current);
                                            videoRef.current.srcObject = streamRef.current;
                                        } else {
                                            console.warn("videoRef or streamRef not ready for srcObject assignment in live preview.");
                                        }
                                    }
                                }, void 0, false, {
                                    fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                    lineNumber: 1440,
                                    columnNumber: 16
                                }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                    className: "text-center p-4 flex flex-col items-center justify-center text-muted-foreground space-y-3 opacity-70 group-hover:opacity-90 transition-opacity duration-300",
                                    children: [
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ImageIcon$3e$__["ImageIcon"], {
                                            "data-ai-hint": "placeholder video",
                                            className: "h-24 w-24 opacity-50 group-hover:opacity-70 transition-opacity"
                                        }, void 0, false, {
                                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                            lineNumber: 1458,
                                            columnNumber: 17
                                        }, this),
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                            className: "text-lg font-medium",
                                            children: "A pré-visualização aparecerá aqui."
                                        }, void 0, false, {
                                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                            lineNumber: 1459,
                                            columnNumber: 17
                                        }, this),
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                            className: "text-sm",
                                            children: "Ajuste as configurações e inicie a gravação."
                                        }, void 0, false, {
                                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                            lineNumber: 1460,
                                            columnNumber: 17
                                        }, this)
                                    ]
                                }, void 0, true, {
                                    fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                    lineNumber: 1457,
                                    columnNumber: 15
                                }, this)
                            }, void 0, false, {
                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                lineNumber: 1428,
                                columnNumber: 12
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                className: "space-y-4 pt-4 border-t border-border/20 md:border-none",
                                children: activeTab === 'gravar' && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
                                    children: [
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                            className: "grid grid-cols-1 sm:grid-cols-2 gap-4",
                                            children: [
                                                !isRecording ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                                                    size: "lg",
                                                    onClick: handleStartRecording,
                                                    disabled: isClipBufferingActive,
                                                    className: "group w-full text-lg py-7 bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white transition-all duration-300 ease-out shadow-md hover:shadow-lg active:scale-95 transform hover:scale-[1.02] focus:ring-4 focus:ring-green-500/50",
                                                    children: [
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$monitor$2d$play$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__MonitorPlay$3e$__["MonitorPlay"], {
                                                            className: "mr-2 h-6 w-6 transition-transform duration-300 group-hover:scale-110"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                            lineNumber: 1471,
                                                            columnNumber: 21
                                                        }, this),
                                                        " Iniciar Gravação"
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                    lineNumber: 1470,
                                                    columnNumber: 21
                                                }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                                                    size: "lg",
                                                    onClick: handleStopRecording,
                                                    className: "group w-full text-lg py-7 bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white transition-all duration-300 ease-out shadow-md hover:shadow-lg active:scale-95 transform hover:scale-[1.02] focus:ring-4 focus:ring-red-500/50",
                                                    children: [
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$circle$2d$stop$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__StopCircle$3e$__["StopCircle"], {
                                                            className: "mr-2 h-6 w-6 transition-transform duration-300 group-hover:scale-110"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                            lineNumber: 1475,
                                                            columnNumber: 21
                                                        }, this),
                                                        " Parar Gravação"
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                    lineNumber: 1474,
                                                    columnNumber: 21
                                                }, this),
                                                !isClipBufferingActive ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                                                    size: "lg",
                                                    onClick: handleToggleClipBuffering,
                                                    disabled: isRecording,
                                                    variant: "outline",
                                                    className: "group w-full text-lg py-7 border-purple-500 text-purple-600 hover:bg-purple-500/10 hover:text-purple-700 hover:border-purple-600 transition-all duration-300 ease-out shadow-md hover:shadow-lg active:scale-95 transform hover:scale-[1.02] focus:ring-4 focus:ring-purple-500/30",
                                                    children: [
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$scissors$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Scissors$3e$__["Scissors"], {
                                                            className: "mr-2 h-6 w-6 transition-transform duration-300 group-hover:rotate-[-12deg] group-hover:scale-105"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                            lineNumber: 1481,
                                                            columnNumber: 25
                                                        }, this),
                                                        " Ativar Modo Clipe"
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                    lineNumber: 1480,
                                                    columnNumber: 21
                                                }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                                                    size: "lg",
                                                    onClick: handleToggleClipBuffering,
                                                    variant: "outline",
                                                    className: "group w-full text-lg py-7 border-purple-600 text-purple-700 bg-purple-500/10 hover:bg-purple-500/20 hover:border-purple-700 transition-all duration-300 ease-out shadow-md hover:shadow-lg active:scale-95 transform hover:scale-[1.02] focus:ring-4 focus:ring-purple-600/40",
                                                    children: [
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$circle$2d$stop$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__StopCircle$3e$__["StopCircle"], {
                                                            className: "mr-2 h-6 w-6 transition-transform duration-300 group-hover:scale-110"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                            lineNumber: 1485,
                                                            columnNumber: 25
                                                        }, this),
                                                        " Desativar Modo Clipe"
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                    lineNumber: 1484,
                                                    columnNumber: 21
                                                }, this)
                                            ]
                                        }, void 0, true, {
                                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                            lineNumber: 1468,
                                            columnNumber: 17
                                        }, this),
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                                            size: "lg",
                                            onClick: handleSaveClip,
                                            disabled: !isClipBufferingActive || isRecording || clipChunksRef.current.length === 0,
                                            variant: "default",
                                            className: "group w-full text-lg py-7 bg-gradient-to-r from-accent to-teal-500 hover:from-accent/90 hover:to-teal-500/90 text-accent-foreground transition-all duration-300 ease-out shadow-md hover:shadow-lg active:scale-95 data-[disabled=true]:bg-muted data-[disabled=true]:text-muted-foreground data-[disabled=true]:hover:bg-muted transform hover:scale-[1.02] focus:ring-4 focus:ring-accent/40",
                                            children: [
                                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$disc$2d$3$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Disc3$3e$__["Disc3"], {
                                                    className: "mr-2 h-6 w-6 transition-transform duration-300 group-hover:animate-spin-slow"
                                                }, void 0, false, {
                                                    fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                    lineNumber: 1490,
                                                    columnNumber: 21
                                                }, this),
                                                " Salvar Clipe (Últimos ",
                                                CLIP_DURATION_MS / 1000,
                                                "s)"
                                            ]
                                        }, void 0, true, {
                                            fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                            lineNumber: 1489,
                                            columnNumber: 17
                                        }, this)
                                    ]
                                }, void 0, true)
                            }, void 0, false, {
                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                lineNumber: 1465,
                                columnNumber: 11
                            }, this),
                            (videoURL || webcamVideoURL) && activeTab === 'gravar' && !isRecording && !isClipBufferingActive && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                className: "pt-6 mt-6 border-t border-border/30 space-y-4 animate-in fade-in-up duration-500",
                                children: [
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("h4", {
                                        className: "text-lg font-semibold text-center text-primary",
                                        children: "Downloads Disponíveis"
                                    }, void 0, false, {
                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                        lineNumber: 1498,
                                        columnNumber: 15
                                    }, this),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                        className: "grid grid-cols-1 sm:grid-cols-2 gap-4",
                                        children: [
                                            videoURL && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                                                size: "lg",
                                                onClick: handleDownload,
                                                variant: "outline",
                                                className: "group w-full py-6 text-md border-primary/70 text-primary hover:bg-primary/10 hover:border-primary transition-all duration-300 ease-out shadow-md hover:shadow-lg active:scale-95 transform hover:scale-[1.02] focus:ring-4 focus:ring-primary/30",
                                                children: [
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$download$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Download$3e$__["Download"], {
                                                        className: "mr-2 h-5 w-5 transition-transform duration-300 group-hover:translate-y-0.5"
                                                    }, void 0, false, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1507,
                                                        columnNumber: 23
                                                    }, this),
                                                    " Baixar Tela (.",
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                        children: targetFileExtension
                                                    }, void 0, false, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1507,
                                                        columnNumber: 137
                                                    }, this),
                                                    ")"
                                                ]
                                            }, void 0, true, {
                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                lineNumber: 1501,
                                                columnNumber: 21
                                            }, this),
                                            webcamVideoURL && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                                                size: "lg",
                                                onClick: handleDownloadWebcam,
                                                variant: "outline",
                                                className: "group w-full py-6 text-md border-pink-500/70 text-pink-600 hover:bg-pink-500/10 hover:border-pink-500 transition-all duration-300 ease-out shadow-md hover:shadow-lg active:scale-95 transform hover:scale-[1.02] focus:ring-4 focus:ring-pink-500/30",
                                                children: [
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$camera$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Camera$3e$__["Camera"], {
                                                        className: "mr-2 h-5 w-5 transition-transform duration-300 group-hover:scale-105"
                                                    }, void 0, false, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1517,
                                                        columnNumber: 23
                                                    }, this),
                                                    " Baixar Webcam (.",
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                        children: targetWebcamFileExtension
                                                    }, void 0, false, {
                                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                        lineNumber: 1517,
                                                        columnNumber: 131
                                                    }, this),
                                                    ")"
                                                ]
                                            }, void 0, true, {
                                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                                lineNumber: 1511,
                                                columnNumber: 21
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                        lineNumber: 1499,
                                        columnNumber: 15
                                    }, this)
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                                lineNumber: 1497,
                                columnNumber: 13
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                        lineNumber: 1427,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
                lineNumber: 1270,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx",
        lineNumber: 1243,
        columnNumber: 5
    }, this);
}
_s(ScreenRecorderControls, "bwDl8leRy0J4poEVfKN0OZyqqeA=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$hooks$2f$use$2d$toast$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useToast"]
    ];
});
_c = ScreenRecorderControls;
var _c;
__turbopack_context__.k.register(_c, "ScreenRecorderControls");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx [app-client] (ecmascript, next/dynamic entry)": ((__turbopack_context__) => {

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.n(__turbopack_context__.i("[project]/src/components/features/screen-recorder/ScreenRecorderControls.tsx [app-client] (ecmascript)"));
}}),
}]);

//# sourceMappingURL=src_components_84689980._.js.map